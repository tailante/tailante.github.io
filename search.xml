<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>移动端项目总结（五）</title>
      <link href="/posts/b2f7.html"/>
      <url>/posts/b2f7.html</url>
      
        <content type="html"><![CDATA[<h1 id="移动端项目总结（五）"><a href="#移动端项目总结（五）" class="headerlink" title="移动端项目总结（五）"></a>移动端项目总结（五）</h1><h2 id="文章搜索功能"><a href="#文章搜索功能" class="headerlink" title="文章搜索功能"></a>文章搜索功能</h2><div class="tip home"><p>第一、首页点击 放大镜 按钮-跳转路由-出现搜索页面</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/04/PKQLF.png"/></div></div><p><strong>1.views/Search/index.vue - 新建页面和标签</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 搜索页面头部 --&gt;</span><br><span class="line">    &lt;div class=&quot;search-header&quot;&gt;</span><br><span class="line">      &lt;!-- 后退按钮 --&gt;</span><br><span class="line">      &lt;van-icon name=&quot;arrow-left&quot; color=&quot;white&quot; size=&quot;0.48rem&quot; class=&quot;goback&quot; @click=&quot;$router.back()&quot;/&gt;</span><br><span class="line">      &lt;!-- 搜索组件 --&gt;</span><br><span class="line">      &lt;van-search placeholder=&quot;请输入搜索关键词&quot; background=&quot;#007BFF&quot; shape=&quot;round&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      kw: &#x27;&#x27; // 搜索关键字</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.search-header &#123;</span><br><span class="line">  height: 46px;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  background-color: #007bff;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  /*后退按钮*/</span><br><span class="line">  .goback &#123;</span><br><span class="line">    padding-left: 14px;</span><br><span class="line">  &#125;</span><br><span class="line">  /*搜索组件*/</span><br><span class="line">  .van-search &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>2.配置路由 - 与layout并列关系</strong><br><strong>3.点击Home页面右上角搜索图标, 可以切换路由到搜索页面</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template #right&gt;</span><br><span class="line">&lt;van-icon name=&quot;search&quot; size=&quot;0.48rem&quot; color=&quot;#fff&quot; @click=&quot;$router.push(&#x27;/search&#x27;)&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第二、进入搜索页后，输入框自动聚焦——封装自定义指令插件</p></div><p><strong>1.utils/directives.js, 定义全局自定义指令插件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">// 插件对象(必须有install方法, 才可以注入到Vue.use中)</span><br><span class="line">export default &#123;</span><br><span class="line">  install () &#123;</span><br><span class="line">    Vue.directive(&#x27;fofo&#x27;, &#123;</span><br><span class="line">      inserted (el) &#123;</span><br><span class="line">        // 指令在van-search组件身上, 获取的是组件根标签div, 而input在标签内</span><br><span class="line">        el = el.querySelector(&#x27;input&#x27;)</span><br><span class="line">        el.focus()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.引入到main.js注册</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import diretivesObj from &#x27;@/utils/directives&#x27;</span><br><span class="line">Vue.use(diretivesObj)</span><br></pre></td></tr></table></figure><p><strong>3.去van-search上使用</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 搜索组件 --&gt;</span><br><span class="line">&lt;van-search v-fofo placeholder=&quot;请输入搜索关键词&quot; background=&quot;#007BFF&quot; shape=&quot;round&quot; /&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第三、性能优化——输入框防抖</p></div><p><strong>1.van-search关联kw变量</strong><br><strong>2.在data中声明变量timer, 保存延迟定时器</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        kw: &#x27;&#x27;, // 搜索关键字</span><br><span class="line">        timer: null // 防抖, 用的定时器</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.监听输入框的@inupt事件, 在事件处理函数中使用防抖操作</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-search v-fofo v-model=&quot;kw&quot; placeholder=&quot;请输入搜索关键词&quot; background=&quot;#007BFF&quot; shape=&quot;round&quot; @input=&quot;inputFn&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    methods: &#123;</span><br><span class="line">        inputFn () &#123;</span><br><span class="line">            clearTimeout(this.timer)</span><br><span class="line">            this.timer = setTimeout(() =&gt; &#123;</span><br><span class="line">                if (this.kw.length === 0) return // 防止空内容触发下面逻辑</span><br><span class="line">                console.log(this.kw)</span><br><span class="line">            &#125;, 500)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第四、发送接口请求，搜索建议列表铺设</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/04/PKpTy.png"/></div></div><p><strong>1.准备标签、样式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 搜索建议列表 --&gt;</span><br><span class="line">&lt;div class=&quot;sugg-list&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;sugg-item&quot; &gt;</span><br><span class="line">        搜索建议</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">/*搜索建议列表样式 */</span><br><span class="line">.sugg-list &#123;</span><br><span class="line">  .sugg-item &#123;</span><br><span class="line">    padding: 0 15px;</span><br><span class="line">    border-bottom: 1px solid #f8f8f8;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    line-height: 50px;</span><br><span class="line">    // 实现省略号的三行代码</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    text-overflow: ellipsis;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.在Search/index.vue使用, 请求数据，把数据保存到data里的变量中</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import &#123; suggestListAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      kw: &#x27;&#x27;, // 搜索关键字</span><br><span class="line">      timer: null, // 防抖, 用的定时器</span><br><span class="line">      suggestList: [] // 建议关键字列表</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async inputFn () &#123;</span><br><span class="line">      clearTimeout(this.timer)</span><br><span class="line">      this.timer = setTimeout(async () =&gt; &#123;</span><br><span class="line">        if (this.kw.length === 0) return // 防止空内容触发下面逻辑</span><br><span class="line">        const res = await suggestListAPI(&#123;</span><br><span class="line">          q: this.kw</span><br><span class="line">        &#125;)</span><br><span class="line">        this.suggestList = res.data.data.options</span><br><span class="line">      &#125;, 500)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5.渲染循环到页面上</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 搜索建议列表 --&gt;</span><br><span class="line">&lt;div class=&quot;sugg-list&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;sugg-item&quot; v-for=&quot;(str, index) in suggestList&quot; :key=&quot;index&quot; v-html=&quot;lightFn(str, kw)&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第五、搜索建议列表输入文字高亮效果</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/04/PKXpd.png"/></div></div><p><strong>1.定义高亮方法utils/str.js - 封装</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 转换高亮文字的方法</span><br><span class="line"> * @param &#123;*&#125; str 要被处理的字符串</span><br><span class="line"> * @param &#123;*&#125; target 要匹配关键字</span><br><span class="line"> * @returns 处理后带标签高亮的方法</span><br><span class="line"> */</span><br><span class="line">export const lightFn = (str, target) =&gt; &#123;</span><br><span class="line">  const reg = new RegExp(target, &#x27;ig&#x27;)</span><br><span class="line"></span><br><span class="line">  return str.replace(reg, (match) =&gt; &#123; // match是关键字匹配的值(尽量保持原样)</span><br><span class="line">    return `&lt;span style=&quot;color: red&quot;&gt;$&#123;match&#125;&lt;/span&gt;`</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>注意：正则的语法糖写法为什么不能使用？<br>因为如果使用变量作为正则的匹配条件，不能使用简化的语法糖，匹配的结果不能使用 target 因为匹配回来的菜单可能有大小写，而你输入框的大小写是固定的。<br>同时 replace 可以穿第二个参数，第二个参数可以是函数 而这个函数里面的第一个参数就是匹配的人家原来的值</p></div><p><strong>2.导入到vue组件页面, 注册, 使用</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 搜索页面头部 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 搜索建议列表 --&gt;</span><br><span class="line">    &lt;div class=&quot;sugg-list&quot; v-for=&quot;(str, index) in suggestList&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;sugg-item&quot; v-html=&quot;lightFn(str, kw)&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; lightFn &#125; from &#x27;@/utils/str&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    lightFn // key和value变量名同名</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>注意：铺设搜索建议列表为什么不使用插值表达式而使用 v-html ？<br>因为，插值表达式的的用法与 v-text 属性用法相同，它们不会解析html标签，导致我们的文字高亮效果无法实现</p></div><div class="tip home"><p>第六、搜索记录历史铺设</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/04/PKvZI.png"/></div></div><p><strong>1.准备结构与样式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 搜索历史 --&gt;</span><br><span class="line">&lt;div class=&quot;search-history&quot;&gt;</span><br><span class="line">    &lt;!-- 标题 --&gt;</span><br><span class="line">    &lt;van-cell title=&quot;搜索历史&quot;&gt;</span><br><span class="line">        &lt;!-- 使用 right-icon 插槽来自定义右侧图标 --&gt;</span><br><span class="line">        &lt;template #right-icon&gt;</span><br><span class="line">&lt;van-icon name=&quot;delete&quot; class=&quot;search-icon&quot; /&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">    &lt;/van-cell&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 历史列表 --&gt;</span><br><span class="line">    &lt;div class=&quot;history-list&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;history-item&quot;&gt;历史文字&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">/**搜索历史 */</span><br><span class="line">.search-icon &#123;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">  line-height: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.history-list &#123;</span><br><span class="line">  padding: 0 10px;</span><br><span class="line">  .history-item &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    padding: 8px 14px;</span><br><span class="line">    background-color: #efefef;</span><br><span class="line">    margin: 10px 8px 0px 8px;</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.定义初始变量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history: [&#x27;API&#x27;, &#x27;java&#x27;, &#x27;css&#x27;, &#x27;前端&#x27;, &#x27;后台接口&#x27;, &#x27;python&#x27;] // 搜索历史</span><br></pre></td></tr></table></figure><p><strong>3.循环铺设</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 历史列表 --&gt;</span><br><span class="line">&lt;div class=&quot;history-list&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;history-item&quot; v-for=&quot;str, index in history&quot; :key=&quot;index&quot;&gt;&#123;&#123; str &#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>4.互斥条件, 搜索列表，如果不搜索则显示历史记录，开始搜索则关闭历史记录</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 搜索建议列表 --&gt;</span><br><span class="line">&lt;div class=&quot;sugg-list&quot; v-if=&quot;kw.length !== 0&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 搜索历史 --&gt;</span><br><span class="line">&lt;div class=&quot;search-history&quot; v-else&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第七、输入框回车后/点击联想菜单项后/点击历史记录, 均会跳转到搜索结果页</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/04/PcOQk.png"/></div></div><p><strong>1.定义搜索结果页面Search/SearchResult.vue - 并且配置路由</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;!-- 搜索结果页-头部导航 --&gt;</span><br><span class="line">      &lt;div class=&quot;search-result-container&quot;&gt;</span><br><span class="line">        &lt;!-- 点击实现后退效果 --&gt;</span><br><span class="line">        &lt;van-nav-bar</span><br><span class="line">          title=&quot;搜索结果&quot;</span><br><span class="line">          left-arrow</span><br><span class="line">          @click-left=&quot;$router.go(-1)&quot;</span><br><span class="line">          fixed</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;SearchResult&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.search-result-container &#123;</span><br><span class="line">  padding-top: 46px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>2.返回箭头颜色到cover.css里定制成白色即可</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@nav-bar-icon-color: white;</span><br></pre></td></tr></table></figure><p><strong>3.配置路由，同时Search/index.vue - 回车跳转传参</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-search</span><br><span class="line">            v-fofo</span><br><span class="line">            v-model=&quot;kw&quot;</span><br><span class="line">            placeholder=&quot;请输入搜索关键词&quot;</span><br><span class="line">            background=&quot;#007BFF&quot;</span><br><span class="line">            shape=&quot;round&quot;</span><br><span class="line">            @input=&quot;inputFn&quot;</span><br><span class="line">            @search=&quot;enterFn&quot;</span><br><span class="line">            /&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    methods: &#123;</span><br><span class="line">        // 输入框回车</span><br><span class="line">        enterFn () &#123;</span><br><span class="line">            this.$router.push(&#123;</span><br><span class="line">                path: `/search/$&#123;this.kw&#125;`</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>4.Search/index.vue - 联想菜单项, 点击跳转传参</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;sugg-list&quot; v-if=&quot;kw.length !== 0&quot;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">         class=&quot;sugg-item&quot;</span><br><span class="line">         v-for=&quot;(str, index) in suggestList&quot;</span><br><span class="line">         :key=&quot;index&quot;</span><br><span class="line">         v-html=&quot;lightFn(str, kw)&quot;</span><br><span class="line">         @click=&quot;clickFn(str)&quot;</span><br><span class="line">         &gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    methods: &#123;</span><br><span class="line">        // 建议列表点击</span><br><span class="line">        clickFn (str) &#123;</span><br><span class="line">            this.$router.push(&#123;</span><br><span class="line">                path: `/search/$&#123;str&#125;`</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>5.点击历史记录, 跳转结果页</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 历史列表 --&gt;</span><br><span class="line">&lt;div class=&quot;history-list&quot;&gt;</span><br><span class="line">    &lt;span</span><br><span class="line">          class=&quot;history-item&quot;</span><br><span class="line">          v-for=&quot;(str, index) in history&quot;</span><br><span class="line">          :key=&quot;index&quot;</span><br><span class="line">          @click=&quot;hisClickFn(str)&quot;</span><br><span class="line">          &gt;&#123;&#123; str &#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">methods: &#123;</span><br><span class="line">        // 历史记录点击</span><br><span class="line">        hisClickFn (str) &#123;</span><br><span class="line">          this.$router.push(&#123;</span><br><span class="line">            path: `/search/$&#123;str&#125;`</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第八、输入框回车后/点击联想菜单项后, 均会保存历史搜索记录</p></div><p><strong>1.在输入框回车确认事件中, 录入搜索关键字</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.history.push(this.kw) // 保存搜索关键字</span><br></pre></td></tr></table></figure><p><strong>2.在点击联想菜单项, 录入搜索关键字</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.history.push(str) // 保存搜索关键字</span><br></pre></td></tr></table></figure><div class="tip warning"><p>问题1: 发现回来 history 数组里并未渲染历史列表<br>因为跳转页面, 原来页面被释放了, 回来后数组重新创建<br>解决: 本地缓存起来</p></div><p><strong>3.使用 watch 深度监听 history 数组的变化，同时重复的记录不应该多次保存，只需要保存一次</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">    history: &#123; // 历史记录数组改变</span><br><span class="line">      deep: true,</span><br><span class="line">      handler () &#123;</span><br><span class="line">        // set 数组去重</span><br><span class="line">        // 如果里面是对象，那么它比较的是对象的地址</span><br><span class="line">        const theSet = new Set(this.history)</span><br><span class="line">        const arr = Array.from(theSet)</span><br><span class="line">        setStorage(&#x27;history&#x27;, JSON.stringify(arr))</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">// 刚打开默认从本地获取history数组的值</span><br><span class="line">history: JSON.parse(localStorage.getItem(&#x27;his&#x27;)) || [] // 搜索历史</span><br></pre></td></tr></table></figure><div class="tip warning"><p>问题2: 但是发现跳转后, 并未保存到本地<br>主要是因为 vue 会先将回调执行完 才会再次解析模板（提高效率，不然变化一次解析一次太浪费时间了）,watch才能监听到history在回调中值的改变(但是当回调执行完已经跳路由了)<br>因为路由跳转执行先于 watch,所以需要对路由使用 $nextTick 或者加定时器</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 输入框回车</span><br><span class="line">enterFn () &#123;</span><br><span class="line">    this.history.push(this.kw) // 保存搜索关键字</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">        this.$router.push(&#123;</span><br><span class="line">            path: `/search/$&#123;this.kw&#125;`</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">// 建议列表点击</span><br><span class="line">clickFn (str) &#123;</span><br><span class="line">this.history.push(str) // 保存搜索关键字</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">    this.$router.push(&#123;</span><br><span class="line">    path: `/search/$&#123;str&#125;`</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4.点击删除小图标, 清空搜索历史</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 标题 --&gt;</span><br><span class="line">&lt;van-cell title=&quot;搜索历史&quot;&gt;</span><br><span class="line">    &lt;!-- 使用 right-icon 插槽来自定义右侧图标 --&gt;</span><br><span class="line">    &lt;template #right-icon&gt;</span><br><span class="line">&lt;van-icon name=&quot;delete&quot; class=&quot;search-icon&quot; @click=&quot;clearFn&quot;/&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/van-cell&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">methods: &#123;</span><br><span class="line">        // 清空搜索历史</span><br><span class="line">        clearFn () &#123;</span><br><span class="line">          this.history = [] // watch会触发, 把空数组保存到本地</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第九、发送请求，搜索结果列表铺设</p></div><p><strong>1.定义搜索结果列表接口</strong><br><strong>2.在Search/SearchResult.vue中 接收路由参数, 然后 调用接口拿到搜索结果列表数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import &#123; searchResultListAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;SearchResult&#x27;,</span><br><span class="line">  async created () &#123;</span><br><span class="line">    const res = await searchResultListAPI(&#123;</span><br><span class="line">      q: this.$route.params.keywords // 拿到关键词, keywords来源于router/index.js你定义的动态路由参数名</span><br><span class="line">    &#125;)</span><br><span class="line">    console.log(res)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.Search/SearchResult.vue - 标签准备 - 复用components/ArticleItem.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 可以考虑, 把Home/components/ArticleItem 挪到全局公共组件src/components文件夹下</span><br><span class="line"></span><br><span class="line">&lt;!-- 搜索结果 --&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;article-item&gt;&lt;/article-item&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import ArticleItem from &#x27;@/components/ArticleItem&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    ArticleItem</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>4.SearchResult.vue - 接收数据, 循环文章单元格, 传入文章对象 - 查看效果</strong></p><div class="tip warning"><p>这就是为什么我们前文中，不能将发送请求逻辑写入到 ArticleItem，因为复用的组件只需要进行接收数据渲染即可</p></div><div class="tip home"><p>第十、搜索结果——上拉加载更多</p></div><p><strong>1.准备van-list组件和变量以及方法, 单独定义个getSearchResultFn方法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 搜索结果页-头部导航 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 搜索结果 --&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;van-list</span><br><span class="line">        v-model=&quot;loading&quot;</span><br><span class="line">        :finished=&quot;finished&quot;</span><br><span class="line">        finished-text=&quot;没有更多了&quot;</span><br><span class="line">        @load=&quot;onLoad&quot;</span><br><span class="line">        :immediate-check=&quot;false&quot;</span><br><span class="line">        offset=&quot;50&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;article-item</span><br><span class="line">          v-for=&quot;obj in articleList&quot;</span><br><span class="line">          :key=&quot;obj.art_id&quot;</span><br><span class="line">          :obj=&quot;obj&quot;</span><br><span class="line">        &gt;&lt;/article-item&gt;</span><br><span class="line">      &lt;/van-list&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      articleList: [], // 文章数据</span><br><span class="line">      loading: false, // 加载状态</span><br><span class="line">      finished: false // 全部加载完成状态</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 触底加载更多</span><br><span class="line">    onLoad () &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取搜索结果</span><br><span class="line">    async getSearchResultFn () &#123;</span><br><span class="line">      const res = await searchResultListAPI(&#123;</span><br><span class="line">        q: this.$route.params.keywords // 拿到关键词, keywords来源于router/index.js你定义的动态路由参数名</span><br><span class="line">      &#125;)</span><br><span class="line">      console.log(res)</span><br><span class="line">      // 数据预处理</span><br><span class="line">      res.data.data.results.forEach((obj) =&gt; &#123;</span><br><span class="line">        obj.pubdate = timeAgo(obj.pubdate)</span><br><span class="line">      &#125;)</span><br><span class="line">      this.articleList = res.data.data.results</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created () &#123;</span><br><span class="line">    this.getSearchResultFn()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>2.在onLoad触发的网络请求函数中,接口已经准备好, page传参,data变量里定义page: 1,onLoad方法中判断现在有数据, page++, 发请求</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      articleList: [], // 文章数据</span><br><span class="line">      loading: false, // 加载状态</span><br><span class="line">      finished: false, // 全部加载完成状态</span><br><span class="line">      page: 1 // 页码</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 触底加载更多</span><br><span class="line">    onLoad () &#123;</span><br><span class="line">      if (this.articleList.length &gt; 0) &#123;</span><br><span class="line">        this.page++</span><br><span class="line">        this.getSearchResultFn()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取搜索结果</span><br><span class="line">    async getSearchResultFn () &#123;</span><br><span class="line">      const res = await searchResultListAPI(&#123;</span><br><span class="line">        q: this.$route.params.keywords, // 拿到关键词, keywords来源于router/index.js你定义的动态路由参数名</span><br><span class="line">        page: this.page</span><br><span class="line">      &#125;)</span><br><span class="line">      console.log(res)</span><br><span class="line">      // 更多数据判断</span><br><span class="line">      if (res.data.data.results.length === 0) &#123;</span><br><span class="line">        this.finished = true</span><br><span class="line">        return</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 数据预处理</span><br><span class="line">      res.data.data.results.forEach((obj) =&gt; &#123;</span><br><span class="line">        obj.pubdate = timeAgo(obj.pubdate)</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      // 合并数据</span><br><span class="line">      this.articleList = [...this.articleList, ...res.data.data.results]</span><br><span class="line">      this.loading = false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>由于前文已经介绍过该功能的用法，这里不做过多阐述，发送请求的参数变化主要取决于接口文档的变化</p></div><h2 id="文章详情"><a href="#文章详情" class="headerlink" title="文章详情"></a>文章详情</h2><div class="tip home"><p>第一、文章详情页创建和路由</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/04/PowfI.png"/></div></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- Header 区域 --&gt;</span><br><span class="line">    &lt;van-nav-bar fixed title=&quot;文章详情&quot; left-arrow @click-left=&quot;$router.back()&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 文章信息区域 --&gt;</span><br><span class="line">    &lt;div class=&quot;article-container&quot;&gt;</span><br><span class="line">      &lt;!-- 文章标题 --&gt;</span><br><span class="line">      &lt;h1 class=&quot;art-title&quot;&gt;小程序&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 用户信息 --&gt;</span><br><span class="line">      &lt;van-cell center title=&quot;张三&quot; label=&quot;3天前&quot;&gt;</span><br><span class="line">        &lt;template #icon&gt;</span><br><span class="line">          &lt;img src=&quot;&quot; alt=&quot;&quot; class=&quot;avatar&quot;&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">        &lt;template #default&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            &lt;van-button type=&quot;info&quot; size=&quot;mini&quot;&gt;已关注&lt;/van-button&gt;</span><br><span class="line">            &lt;van-button icon=&quot;plus&quot; type=&quot;info&quot; size=&quot;mini&quot; plain&gt;关注&lt;/van-button&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/van-cell&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 分割线 --&gt;</span><br><span class="line">      &lt;van-divider&gt;&lt;/van-divider&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 文章内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;art-content&quot;&gt;好好学习, 天天向上&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 分割线 --&gt;</span><br><span class="line">      &lt;van-divider&gt;End&lt;/van-divider&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 点赞 --&gt;</span><br><span class="line">      &lt;div class=&quot;like-box&quot;&gt;</span><br><span class="line">        &lt;van-button icon=&quot;good-job&quot; type=&quot;danger&quot; size=&quot;small&quot;&gt;已点赞&lt;/van-button&gt;</span><br><span class="line">        &lt;van-button icon=&quot;good-job-o&quot; type=&quot;danger&quot; plain size=&quot;small&quot;&gt;点赞&lt;/van-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.article-container &#123;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  margin-top: 46px;</span><br><span class="line">&#125;</span><br><span class="line">.art-title &#123;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  margin: 10px 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.art-content &#123;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  line-height: 24px;</span><br><span class="line">  width: 100%;</span><br><span class="line">  overflow-x: scroll;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">    /deep/ img&#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">  &#125;</span><br><span class="line">    /deep/ pre &#123;</span><br><span class="line">        white-space: pre-wrap;</span><br><span class="line">        word-wrap: break-word;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.van-cell &#123;</span><br><span class="line">  padding: 5px 0;</span><br><span class="line">  &amp;::after &#123;</span><br><span class="line">    display: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.avatar &#123;</span><br><span class="line">  width: 60px;</span><br><span class="line">  height: 60px;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  background-color: #f8f8f8;</span><br><span class="line">  margin-right: 5px;</span><br><span class="line">  border: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.like-box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第二、首页点击文章/搜索结果点击，跳转详情（每条文章右下角x号首页有, 搜索结果没有）</p></div><p><strong>1.在SearchResult.vue里的文章单元格article-item组件上点击跳转</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;article-item</span><br><span class="line">              v-for=&quot;obj in articleList&quot;</span><br><span class="line">              :key=&quot;obj.art_id&quot;</span><br><span class="line">              :obj=&quot;obj&quot;</span><br><span class="line">              @click.native=&quot;$router.push(`/article_detail?aid=$&#123;obj.art_id&#125;`)&quot;</span><br><span class="line">              &gt;&lt;/article-item&gt;</span><br></pre></td></tr></table></figure><p><strong>2.在Home/ArticleList.vue的ArticleItem也点击跳转, 同样方式传参</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 文章列表 --&gt;</span><br><span class="line">&lt;article-item</span><br><span class="line">              v-for=&quot;item in articleList&quot;</span><br><span class="line">              :key=&quot;item.art_id&quot;</span><br><span class="line">              :obj=&quot;item&quot;</span><br><span class="line">              @dislike=&quot;dislikeFn&quot;</span><br><span class="line">              @reports=&quot;reportsFn&quot;</span><br><span class="line">              @click.native=&quot;$router.push(`/article_detail?aid=$&#123;item.art_id&#125;`)&quot;</span><br><span class="line">              &gt;&lt;/article-item&gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>==注意, ArticleItem是组件, 包括Vant的都是组件, 组件身上的事件都是自定义事件(别看是叫click)==<br>组件内需要$emit(‘click’)才会执行<br>解决: 给组件绑定原生的点击事件@click.native  (使用修饰符)</p></div><p><strong>3.首页x, 点击也跳转详情了, 原因: 事件冒泡, 解决</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 在src/components/ArticleItem, 阻止x的事件冒泡</span><br><span class="line"></span><br><span class="line">&lt;!-- 反馈按钮 --&gt;</span><br><span class="line">&lt;van-icon name=&quot;cross&quot; @click.stop=&quot;onCloseClick&quot; /&gt;</span><br></pre></td></tr></table></figure><p><strong>4.搜索结果页, 文档单元格不应该有x</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// 所以给ArticleItem传入布尔值, 使用组件时, 控制是否显示</span><br><span class="line"></span><br><span class="line">// components/ArticleItem.vue 里</span><br><span class="line">&lt;!-- 反馈按钮 --&gt;</span><br><span class="line">&lt;van-icon name=&quot;cross&quot; @click.stop=&quot;onCloseClick&quot; v-if=&quot;showX&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    props: &#123;</span><br><span class="line">        showX: &#123;</span><br><span class="line">            type: Boolean,</span><br><span class="line">            default: true // 默认显示</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">// 在Search/SearchResult.vue, 传入false即可</span><br><span class="line"></span><br><span class="line">&lt;article-item</span><br><span class="line">              v-for=&quot;obj in articleList&quot;</span><br><span class="line">              :key=&quot;obj.art_id&quot;</span><br><span class="line">              :obj=&quot;obj&quot;</span><br><span class="line">              @click.native=&quot;$router.push(`/article_detail?aid=$&#123;obj.art_id&#125;`)&quot;</span><br><span class="line">              :showX=&quot;false&quot;</span><br><span class="line">              &gt;&lt;/article-item&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第三、查看接口文档，发送请求，文章详情数据渲染（铺设页面）</p></div><p><strong>注意：接口所需的文章 id ，可以从路由的query参数里拿到</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import &#123; articleDetailAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  async created () &#123;</span><br><span class="line">    const res = await articleDetailAPI(this.$route.params.art_id)</span><br><span class="line">    console.log(res)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第四、作者的关注与取关</p></div><p><strong>1.先实现前端效果, 先别考虑接口</strong></p><ul><li>给2个按钮绑定相同方法, 传入布尔值区分</li><li>修改对象属性, 影响页面显示按钮</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-button</span><br><span class="line">            type=&quot;info&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            v-if=&quot;artObj.is_followed&quot;</span><br><span class="line">            @click=&quot;followedFn(false)&quot;</span><br><span class="line">            &gt;已关注&lt;/van-button&gt;</span><br><span class="line">&lt;van-button</span><br><span class="line">            icon=&quot;plus&quot;</span><br><span class="line">            type=&quot;info&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            plain</span><br><span class="line">            v-else</span><br><span class="line">            @click=&quot;followedFn(true)&quot;</span><br><span class="line">            &gt;关注&lt;/van-button&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    // 作者关注/取关</span><br><span class="line">    async followedFn (bool) &#123;</span><br><span class="line">        if (bool === true) &#123; // 用户点了关注按钮</span><br><span class="line">            // 业务: 关注用户</span><br><span class="line">            // 显示: 已关注按钮</span><br><span class="line">            this.artObj.is_followed = true</span><br><span class="line">        &#125; else &#123; // 用户点了已关注按钮身上</span><br><span class="line">            // 业务: 取消关注用户</span><br><span class="line">            // 显示: 关注按钮</span><br><span class="line">            this.artObj.is_followed = false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>2.定义接口方法</strong><br><strong>3.在follwedFn方法, 调用接口</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import &#123; followedUserAPI, unFollowedUserAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line"></span><br><span class="line">// 作者关注/取关</span><br><span class="line">async followedFn (bool) &#123;</span><br><span class="line">    if (bool === true) &#123;</span><br><span class="line">        // 用户点了关注按钮</span><br><span class="line">        // 业务: 关注用户</span><br><span class="line">        // 显示: 已关注按钮</span><br><span class="line">        this.artObj.is_followed = true</span><br><span class="line">        await followedUserAPI(&#123;</span><br><span class="line">            target: this.artObj.aut_id</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // 用户点了已关注按钮身上</span><br><span class="line">        // 业务: 取消关注用户</span><br><span class="line">        // 显示: 关注按钮</span><br><span class="line">        this.artObj.is_followed = false</span><br><span class="line">        await unFollowedUserAPI(&#123;</span><br><span class="line">            uid: this.artObj.aut_id</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>注意：文章点赞、收藏功能与作者关注功能实现的思路均相同，这里便不在展示</p></div><div class="tip "><p>未完待续。。。</p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>移动端项目总结（四）</title>
      <link href="/posts/7049.html"/>
      <url>/posts/7049.html</url>
      
        <content type="html"><![CDATA[<h1 id="移动端项目总结（四）"><a href="#移动端项目总结（四）" class="headerlink" title="移动端项目总结（四）"></a>移动端项目总结（四）</h1><h2 id="反馈操作"><a href="#反馈操作" class="headerlink" title="反馈操作"></a>反馈操作</h2><div class="tip home"><p>第一、点击 x 按钮-出现一级反馈面板</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/02/PNPfn.png"/></div></div><p><strong>1.找到类似组件 - vant 中的 ActionSheet 动作面板,在 ArticleItem.vue 中使用</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;!-- 一条文章单元格并列 --&gt;</span><br><span class="line">    &lt;!-- 反馈面板 --&gt;</span><br><span class="line">    &lt;van-action-sheet v-model=&quot;show&quot; :actions=&quot;actions&quot; @select=&quot;onSelect&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data () &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                show: false,</span><br><span class="line">                actions: [</span><br><span class="line">                    &#123; name: &#x27;不感兴趣&#x27; &#125;,</span><br><span class="line">                    &#123; name: &#x27;反馈垃圾内容&#x27; &#125;,</span><br><span class="line">                    &#123; name: &#x27;拉黑作者&#x27; &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            // 反馈面板点击事件</span><br><span class="line">            onSelect () &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>2.发现出来的不全, 分析 DOM 层级结构, 调整挂载位置, 给 van-action-sheet 设置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-action-sheet v-model=&quot;show&quot; :actions=&quot;actions&quot; @select=&quot;onSelect&quot; get-container=&quot;body&quot;/&gt;</span><br></pre></td></tr></table></figure><p><strong>3.补充底部取消按钮 文字</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-action-sheet v-model=&quot;show&quot; :actions=&quot;actions&quot; @select=&quot;onSelect&quot; get-container=&quot;body&quot; cancel-text=&quot;取消&quot;/&gt;</span><br></pre></td></tr></table></figure><p><strong>4.点击 x 反馈按钮, 显示反馈面板</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-icon name=&quot;cross&quot; @click=&quot;onCloseClick&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    methods: &#123;</span><br><span class="line">        // 点击了叉号按钮</span><br><span class="line">        onCloseClick () &#123;</span><br><span class="line">            // 展示动作面板</span><br><span class="line">            this.show = true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第二、点击一级面板反馈垃圾内容-出现二级反馈面板</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/02/PNy1S.png"/></div></div><p><strong>1.只要切换 actions 数组的值即可</strong><br><strong>2.不想散落在逻辑页面里, 所以在 api/report.js 定义 2 个变量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">export const firstActions = [</span><br><span class="line">  &#123; name: &#x27;不感兴趣&#x27; &#125;,</span><br><span class="line">  &#123; name: &#x27;反馈垃圾内容&#x27; &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">export const secondActions = [</span><br><span class="line">  &#123;</span><br><span class="line">    value: 0,</span><br><span class="line">    name: &#x27;其它问题&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: 1,</span><br><span class="line">    name: &#x27;标题夸张&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: 2,</span><br><span class="line">    name: &#x27;低俗色情&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: 3,</span><br><span class="line">    name: &#x27;错别字多&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: 4,</span><br><span class="line">    name: &#x27;旧闻重复&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: 6,</span><br><span class="line">    name: &#x27;内容不实&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: 8,</span><br><span class="line">    name: &#x27;侵权&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: 5,</span><br><span class="line">    name: &#x27;广告软文&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: 7,</span><br><span class="line">    name: &#x27;涉嫌违法犯罪&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>3.在 ArticleItem.vue 中引入使用</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import &#123; firstActions, secondActions &#125; from &#x27;@/api/reports&#x27;</span><br><span class="line"></span><br><span class="line">data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        // ...省略其他</span><br><span class="line">        actions: firstActions</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4.点击反馈面板切换数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">onSelect (action) &#123;</span><br><span class="line">    // action绑定的数据对象, index是索引</span><br><span class="line">    if (action.name === &#x27;反馈垃圾内容&#x27;) &#123;</span><br><span class="line">        // 证明点击的是反馈垃圾内容</span><br><span class="line">        this.actions = this.secondActions</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第二、点击二级面板返回-回到一级反馈面板</p></div><p><strong>1.定义变量 cancelText 设置底部文字(注意只是显示的文字而已)</strong><br><strong>2.绑定取消事件(无论显示取消/返回文字)底部按钮点击都触发</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-action-sheet v-model=&quot;show&quot; :actions=&quot;actions&quot; @select=&quot;onSelect&quot; get-container=&quot;body&quot; :cancel-text=&quot;cancelText&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      show: false,</span><br><span class="line">      actions: firstActions,</span><br><span class="line">      cancelText: &#x27;取消&#x27; // 底部按钮文字</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 反馈面板点击事件</span><br><span class="line">    onSelect (action) &#123;</span><br><span class="line">      if (action.name === &#x27;反馈垃圾内容&#x27;) &#123;</span><br><span class="line">        this.actions = secondActions</span><br><span class="line">        this.cancelText = &#x27;返回&#x27; // 修改底部按钮显示文字</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;，</span><br><span class="line">     // 取消事件</span><br><span class="line">    onCancel () &#123;</span><br><span class="line">      // 判断用户点击的是返回还是取消</span><br><span class="line">      if (this.cancelText === &#x27;返回&#x27;) &#123;</span><br><span class="line">        this.actions = firstActions</span><br><span class="line">        this.cancelText = &#x27;取消&#x27;</span><br><span class="line">        this.show = true // 点返回不要让弹窗关闭, 点取消文字按钮, 弹窗默认关闭</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>注意：上述两个事件的触发条件在 Vant 文档里均有说明，请自行查阅文档。</p></div><div class="tip home"><p>第三、点击一级面板不感兴趣-调用接口发送数据（需要 token）</p></div><p><strong>1.在 ArticleItem.vue 中, 点击不感兴趣文章, 传递文章 id 给 ArticleList 页面</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 反馈面板点击事件</span><br><span class="line">onSelect (action) &#123;</span><br><span class="line">    if (action.name === &#x27;反馈垃圾内容&#x27;) &#123;</span><br><span class="line">        this.actions = secondActions</span><br><span class="line">        this.cancelText = &#x27;返回&#x27;</span><br><span class="line">    &#125; else if (action.name === &#x27;不感兴趣&#x27;) &#123;</span><br><span class="line">        this.$emit(&#x27;dislike&#x27;, this.obj)</span><br><span class="line">        this.show = false // 关闭弹窗</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.在 ArticleList.vue 中, 绑定 dislike 事件和 dislikeFn 方法,弄个 Notify 通知框, 提示用户反馈结果</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import &#123; articleDislikeAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line">import &#123; Notify &#125; from &#x27;vant&#x27;</span><br><span class="line"></span><br><span class="line">// 反馈(不感兴趣)</span><br><span class="line">async dislikeFn (obj) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        await articleDislikeAPI(&#123;</span><br><span class="line">            target: obj.art_id</span><br><span class="line">        &#125;)</span><br><span class="line">        Notify(&#123; type: &#x27;success&#x27;, message: &#x27;反馈成功&#x27; &#125;)</span><br><span class="line">    &#125; catch (err) &#123;</span><br><span class="line">        Notify(&#123; type: &#x27;warning&#x27;, message: &#x27;反馈失败-联系程序员&#x27; &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第四、点击二级面板的各种反馈-调用接口发送数据（需要 token）</p></div><p><strong>在上个例子基础上，点击举报类型调用接口</strong><br><strong>ArticleItem.vue 触发父级@reports 事件, 传反馈的文章对象出来和反馈类型</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 反馈面板点击事件</span><br><span class="line">onSelect (action) &#123;</span><br><span class="line">    if (action.name === &#x27;反馈垃圾内容&#x27;) &#123;</span><br><span class="line">        this.actions = secondActions</span><br><span class="line">        this.cancelText = &#x27;返回&#x27;</span><br><span class="line">    &#125; else if (action.name === &#x27;不感兴趣&#x27;) &#123;</span><br><span class="line">        this.$emit(&#x27;dislike&#x27;, this.obj)</span><br><span class="line">        this.show = false</span><br><span class="line">    &#125; else &#123; // 这里就是二级反馈</span><br><span class="line">        this.$emit(&#x27;reports&#x27;, this.obj, action.value) // 外面需要反馈类型的值</span><br><span class="line">        this.actions = firstActions</span><br><span class="line">        this.show = false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong>在 ArticleList.vue 里引入接口, 和@reports 事件方法使用</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import &#123; articleReportsAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line"></span><br><span class="line">// 反馈(举报)</span><br><span class="line">async reportsFn (obj, type) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        await articleReportsAPI(&#123;</span><br><span class="line">            target: obj.art_id,</span><br><span class="line">            type: type,</span><br><span class="line">            remark: &#x27;就是其他问题&#x27;</span><br><span class="line">        &#125;)</span><br><span class="line">        Notify(&#123; type: &#x27;success&#x27;, message: &#x27;举报成功&#x27; &#125;)</span><br><span class="line">    &#125; catch (err) &#123;</span><br><span class="line">        Notify(&#123; type: &#x27;warning&#x27;, message: &#x27;举报失败&#x27; &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>注意：这里博主使用自定义事件将数据传入父组件来发送请求是因为：子组件将来是要被搜索功能所复用的，因此不能在子组件内调用接口发送数据，复用的组件最好保证渲染数据的功能即可</p></div><h2 id="axios-拦截器"><a href="#axios-拦截器" class="headerlink" title="axios 拦截器"></a>axios 拦截器</h2><div class="tip home"><p>第一、使用 axios 响应拦截器，判断是否错误 401, 对身份认证问题统一进行权限判断,失败重新登陆</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 添加响应拦截器</span><br><span class="line">axios.interceptors.response.use(function (response) &#123;</span><br><span class="line">  // 2xx 范围内的状态码都会触发该函数。</span><br><span class="line">  // 对响应数据做点什么</span><br><span class="line">  return response</span><br><span class="line">&#125;, async function (error) &#123;</span><br><span class="line">  // 超出 2xx 范围的状态码都会触发该函数。</span><br><span class="line">  // 对响应错误做点什么</span><br><span class="line">  // 只有401才代表身份过期，需要重新登陆</span><br><span class="line">  if (error.response.status === 401) &#123;</span><br><span class="line">    // 为了拿到路由对象，直接去上面引入</span><br><span class="line">    Notify(&#123; type: &#x27;warning&#x27;, message: &#x27;身份认证过期，请重新登陆&#x27; &#125;)</span><br><span class="line">    // 清空token</span><br><span class="line">    removeToken()</span><br><span class="line">    // 跳转回登录页</span><br><span class="line">    router.replace(&#x27;/login&#x27;)</span><br><span class="line">  return Promise.reject(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><div class="tip home"><p>第二、使用 axios 请求拦截器，如果本地有 token, 携带在请求头给后台</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 添加请求拦截器</span><br><span class="line">axios.interceptors.request.use(function (config) &#123;</span><br><span class="line">  // 在发送请求之前做些什么</span><br><span class="line">  // 统一携带 token</span><br><span class="line">  // 判断本地有无 token，判断具体的api/index.js里面如果没有携带 Authorization，我再添加上去</span><br><span class="line">  // undefined是未定义 null是空 你得赋予</span><br><span class="line">  // ?.可选连操作符 如果前面对象里没有length属性 原地返回undefined</span><br><span class="line">  // if 第二个判断是因为防止我自己带的 refresh_token 被覆盖掉</span><br><span class="line">  if (getToken()?.length &gt; 0 &amp;&amp; config.headers.Authorization === undefined) &#123;</span><br><span class="line">    config.headers.Authorization = `Bearer $&#123;getToken()&#125;`</span><br><span class="line">  &#125;</span><br><span class="line">  return config</span><br><span class="line">&#125;, function (error) &#123;</span><br><span class="line">  // 对请求错误做些什么</span><br><span class="line">  return Promise.reject(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><div class="tip warning"><p>判断条件中的这段代码 getToken()?.length &gt; 0 ?.可选连操作符 如果前面对象里没有 length 属性 原地返回 undefined</p></div><h2 id="频道管理"><a href="#频道管理" class="headerlink" title="频道管理"></a>频道管理</h2><div class="tip home"><p>第一、标签准备和样式,为右侧增加一个 + 号</p></div><div class="tip home"><p>第二、点击 + 号，弹出频道管理页面</p></div><p><strong>1.寻找类似的组件 - vant 组件库叫 popup 组件</strong><br><strong>2.单独创建 Home/ChannelEdit.vue - 频道编辑组件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 弹出层的头部区域 --&gt;</span><br><span class="line">    &lt;van-nav-bar title=&quot;频道管理&quot;&gt;</span><br><span class="line">      &lt;template #right&gt;</span><br><span class="line">        &lt;van-icon name=&quot;cross&quot; size=&quot;0.37333334rem&quot; color=&quot;white&quot;/&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/van-nav-bar&gt;</span><br><span class="line">    &lt;!-- 我的频道 --&gt;</span><br><span class="line">    &lt;div class=&quot;my-channel-box&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;channel-title&quot;&gt;</span><br><span class="line">        &lt;span&gt;我的频道</span><br><span class="line">          &lt;span class=&quot;small-title&quot;&gt;</span><br><span class="line">            点击进入频道</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">        &lt;span&gt;编辑&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 我的频道列表 --&gt;</span><br><span class="line">      &lt;van-row type=&quot;flex&quot;&gt;</span><br><span class="line">        &lt;van-col span=&quot;6&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;channel-item van-hairline--surround&quot;&gt;</span><br><span class="line">            名字</span><br><span class="line">            &lt;!-- 删除的徽标 --&gt;</span><br><span class="line">            &lt;van-badge color=&quot;transparent&quot; class=&quot;cross-badge&quot;&gt;</span><br><span class="line">              &lt;template #content&gt;</span><br><span class="line">                &lt;van-icon</span><br><span class="line">                  name=&quot;cross&quot;</span><br><span class="line">                  class=&quot;badge-icon&quot;</span><br><span class="line">                  color=&quot;#cfcfcf&quot;</span><br><span class="line">                  size=&quot;0.32rem&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">              &lt;/template&gt;</span><br><span class="line">            &lt;/van-badge&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">      &lt;/van-row&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 更多频道 --&gt;</span><br><span class="line">    &lt;div class=&quot;more-channel-box&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;channel-title&quot;&gt;</span><br><span class="line">        &lt;span&gt;点击添加更多频道：&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 更多频道列表 --&gt;</span><br><span class="line">      &lt;van-row type=&quot;flex&quot;&gt;</span><br><span class="line">        &lt;van-col span=&quot;6&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;channel-item van-hairline--surround&quot;&gt;名字&lt;/div&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">      &lt;/van-row&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.van-popup,</span><br><span class="line">.popup-container &#123;</span><br><span class="line">  background-color: transparent;</span><br><span class="line">  height: 100%;</span><br><span class="line">  width: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.popup-container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.pop-header &#123;</span><br><span class="line">  height: 90px;</span><br><span class="line">  background-color: #007bff;</span><br><span class="line">  color: white;</span><br><span class="line">  text-align: center;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  position: relative;</span><br><span class="line">  .title &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    position: absolute;</span><br><span class="line">    bottom: 15px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.pop-body &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">  overflow: scroll;</span><br><span class="line">  padding: 8px;</span><br><span class="line">  background-color: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.my-channel-box,</span><br><span class="line">.more-channel-box &#123;</span><br><span class="line">  .channel-title &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    line-height: 28px;</span><br><span class="line">    padding: 0 6px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.channel-item &#123;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 36px;</span><br><span class="line">  background-color: #fafafa;</span><br><span class="line">  margin: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*删除的微标 */</span><br><span class="line">.cross-badge &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  right: -3px;</span><br><span class="line">  top: 0;</span><br><span class="line">  border: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*提示文字 */</span><br><span class="line">.small-title &#123;</span><br><span class="line">  font-size: 10px;</span><br><span class="line">  color: gray;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/02/PlkE5.png"/></div></div><p><strong>3.在 Home/index.vue 引入注册使用</strong><br><strong>4.准备变量 show, 点击按钮处弹窗</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-icon name=&quot;plus&quot; size=&quot;0.37333334rem&quot; class=&quot;moreChannels&quot; @click=&quot;show = true&quot;/&gt;</span><br></pre></td></tr></table></figure><p><strong>5.点击弹出层 x, 关闭</strong></p><p>ChannelEdit 内向父传事件, 影响 show 的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// Home/index.vue内</span><br><span class="line">&lt;!-- 弹出层的主体区域 --&gt;</span><br><span class="line">&lt;channel-edit @close=&quot;show = false&quot;&gt;&lt;/channel-edit&gt;</span><br><span class="line">----------------------------------------------</span><br><span class="line">// ChannelEdit.vue内</span><br><span class="line">&lt;van-nav-bar title=&quot;频道管理&quot;&gt;</span><br><span class="line">    &lt;template #right&gt;</span><br><span class="line">&lt;van-icon name=&quot;cross&quot; size=&quot;0.37333334rem&quot; color=&quot;white&quot; @click=&quot;$emit(&#x27;close&#x27;)&quot;/&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/van-nav-bar&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第三、更多频道，我的频道数据准备（取决与后端接口数据）</p></div><div class="tip warning"><p>由于本项目后端接口只有所有频道数据与我的频道数据，因此我们可以通过计算属性利用简单的算法将更多频道的数据得到：遍历全部数据中的每个, 去已选数组里查找, 找不到收集起来</p></div><p><strong>1.在 ChannelEdit 页面内, 首页把用户已选频道传入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import &#123; allChannelListAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      allChannelList: [] // 所有频道</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    userChannelList: &#123;</span><br><span class="line">      type: Array,</span><br><span class="line">      default: () =&gt; []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  async created () &#123;</span><br><span class="line">    const res = await allChannelListAPI()</span><br><span class="line">    console.log(res)</span><br><span class="line">    this.allChannelList = res.data.data.channels</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">---------------------------------------------------------</span><br><span class="line">&lt;channel-edit :userChannelList=&quot;channelList&quot; @close=&quot;show = false&quot;&gt;&lt;/channel-edit&gt;</span><br></pre></td></tr></table></figure><p><strong>2.ChannelEdit 内设置计算属性 - 提取未选中的频道数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    unChannelList () &#123;</span><br><span class="line">      return this.allChannelList.filter(obj =&gt; &#123;</span><br><span class="line">        const index = this.userChannelList.findIndex(obj2 =&gt; obj2.id === obj.id)</span><br><span class="line">        if (index === -1) return true</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>3.在 Home/ChannelEdit.vue 编辑频道组件上, 对应标签位置, 循环 name 使用即可</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 我的频道列表 --&gt;</span><br><span class="line">&lt;van-row type=&quot;flex&quot;&gt;</span><br><span class="line">    &lt;van-col span=&quot;6&quot; v-for=&quot;obj in userChannelList&quot; :key=&quot;obj.id&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;channel-item van-hairline--surround&quot;&gt;</span><br><span class="line">            &#123;&#123; obj.name &#125;&#125;</span><br><span class="line">            &lt;!-- 删除的徽标 --&gt;</span><br><span class="line">            &lt;van-badge color=&quot;transparent&quot; class=&quot;cross-badge&quot;&gt;</span><br><span class="line">                &lt;template #content&gt;</span><br><span class="line">&lt;van-icon</span><br><span class="line">                      name=&quot;cross&quot;</span><br><span class="line">                      class=&quot;badge-icon&quot;</span><br><span class="line">                      color=&quot;#cfcfcf&quot;</span><br><span class="line">                      size=&quot;0.32rem&quot;</span><br><span class="line">                      /&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/van-badge&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/van-col&gt;</span><br><span class="line">&lt;/van-row&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- 更多频道 --&gt;</span><br><span class="line">&lt;div class=&quot;more-channel-box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;channel-title&quot;&gt;</span><br><span class="line">        &lt;span&gt;点击添加更多频道：&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 更多频道列表 --&gt;</span><br><span class="line">    &lt;van-row type=&quot;flex&quot;&gt;</span><br><span class="line">        &lt;van-col span=&quot;6&quot; v-for=&quot;obj in unChannelList&quot; :key=&quot;obj.id&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;channel-item van-hairline--surround&quot;&gt;&#123;&#123; obj.name &#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;/van-col&gt;</span><br><span class="line">    &lt;/van-row&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第四、频道管理——点击编辑按钮即可对频道进行增删操作</p></div><p><strong>1.点击编辑按钮实现文字切换(变量取反)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;channel-title&quot;&gt;</span><br><span class="line">    &lt;span&gt;我的频道</span><br><span class="line">        &lt;span class=&quot;small-title&quot;&gt;</span><br><span class="line">            &#123;&#123; isEdit ? &#x27;点击删除频道&#x27; : &#x27;点击进入频道&#x27; &#125;&#125;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;span @click=&quot;isEdit = !isEdit&quot;&gt;&#123;&#123; isEdit ? &#x27;完成&#x27; : &#x27;编辑&#x27; &#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isEdit: false // 控制编辑状态</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>2.设置 x 微标显示与否(推荐频道上不能出现 x)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 删除的徽标 --&gt;</span><br><span class="line">&lt;van-badge color=&quot;transparent&quot; class=&quot;cross-badge&quot; v-show=&quot;isEdit &amp;&amp; obj.id !== 0&quot;&gt;</span><br><span class="line">    &lt;template #content&gt;</span><br><span class="line">&lt;van-icon</span><br><span class="line">          name=&quot;cross&quot;</span><br><span class="line">          class=&quot;badge-icon&quot;</span><br><span class="line">          color=&quot;#cfcfcf&quot;</span><br><span class="line">          size=&quot;0.32rem&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/van-badge&gt;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第五、频道管理——编辑状态下，点击更多频道中的每一个频道，会添加进我的频道</p></div><p><strong>1.更多频道选择 - 绑定点击事件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-col span=&quot;6&quot; v-for=&quot;obj in unChannelList&quot; :key=&quot;obj.id&quot; @click=&quot;addFn(obj)&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;channel-item van-hairline--surround&quot;&gt;</span><br><span class="line">        &#123;&#123; obj.name &#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/van-col&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    methods: &#123;</span><br><span class="line">        // 新增频道</span><br><span class="line">        addFn (obj) &#123;</span><br><span class="line">            if (this.isEdit === true) &#123;</span><br><span class="line">                this.$emit(&#x27;addChannel&#x27;, obj)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>2.回传要添加的频道 obj 对象, 子传父</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">addFn (item) &#123; // 新增频道</span><br><span class="line">    if (this.isEdit === true) &#123; // 编辑状态</span><br><span class="line">        this.$emit(&#x27;add&#x27;, item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.在 Home/index.vue, 接收后, 添加到频道数组里</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 弹出层的主体区域 --&gt;</span><br><span class="line">&lt;channel-edit :userChannelList=&quot;channelList&quot; @close=&quot;show = false&quot; @addChannel=&quot;addChannelFn&quot;&gt;&lt;/channel-edit&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    methods: &#123;</span><br><span class="line">        // 添加频道</span><br><span class="line">        addChannelFn (obj) &#123;</span><br><span class="line">            this.channelList.push(obj)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>注意: 你有计算属性, 所以引用变量改变, 未选频道自动重新计算</p></div><div class="tip home"><p>第六、增删同步后台数据</p></div><p><strong>1.定义更新频道接口方法(查看接口文档)</strong></p><p><strong>2.在 Home/index.vue - 引入接口方法, 在新增频道方法中</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 把数据&#123;&#123;name:xxx,id:xxx&#125;&#125;预处理成后台想要的格式&#123;name:xxx,seq:xxx&#125;, 直接把频道数组更新覆盖给后台</span><br><span class="line">import &#123; updateChannelAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line"></span><br><span class="line">async editFn (obj, index, type) &#123; // 编辑频道</span><br><span class="line">    if (type === &#x27;add&#x27;) &#123;</span><br><span class="line">        this.list.push(obj)</span><br><span class="line">    &#125;</span><br><span class="line">    const arr = this.list.filter((obj) =&gt; &#123; return obj.id !== 0 &#125;) // 先过滤掉id为0的推荐频道, 把剩余的数组返回</span><br><span class="line">    console.log(arr)</span><br><span class="line"></span><br><span class="line">    const resultList = arr.map((item, index) =&gt; &#123;</span><br><span class="line">        const newObj = &#123; ...item &#125; // 浅拷贝(让对象和原数组脱离关系)</span><br><span class="line">        newObj.seq = index + 1</span><br><span class="line">        delete newObj.name // 删除对象里name键值对</span><br><span class="line">        return newObj</span><br><span class="line">    &#125;)</span><br><span class="line">    // map会收集每次遍历return的值形成一个新数组</span><br><span class="line">    console.log(resultList)</span><br><span class="line">    await updateChannelAPI(&#123;</span><br><span class="line">        channels: resultList</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><div class="tip warning"><p>注意: 由于本接口不需要传递推荐频道，因此需要在数组中将推荐频道删除，但是数组是引用类型数据，一定要注意，进行删除操作时不要对原数据产生任何影响</p></div><div class="tip warning"><p>以下为错误示范：虽然 filter 导出的新数组是新的地址 但是里面的对象指向的还是同一地址，所以只要对里面的属性进行操作 必然会影响原数组里面的对象</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const newArr = this.userChannelList.filter(item =&gt; item.id !== 0)</span><br><span class="line">      newArr.forEach((item, index) =&gt; &#123;</span><br><span class="line">        delete item.name</span><br><span class="line">        item.seq = index</span><br><span class="line">      &#125;)</span><br><span class="line">      const res = await updateChannelsAPI(&#123;</span><br><span class="line">        channels: newArr</span><br><span class="line">      &#125;)</span><br><span class="line">      console.log(res)</span><br></pre></td></tr></table></figure><div class="tip home"><p>第七、编辑状态下，点击我的频道任意频道，即可对其进行删除</p></div><p><strong>1.推荐频道不允许删除, 所以单独判断一下, 不给删除频道小微标</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 删除的徽标 --&gt;</span><br><span class="line">&lt;van-badge color=&quot;transparent&quot; class=&quot;cross-badge&quot; v-if=&quot;isEdit &amp;&amp; obj.name !== &#x27;推荐&#x27;&quot;&gt;</span><br><span class="line">    &lt;template #content&gt;</span><br><span class="line">&lt;van-icon</span><br><span class="line">          name=&quot;cross&quot;</span><br><span class="line">          class=&quot;badge-icon&quot;</span><br><span class="line">          color=&quot;#cfcfcf&quot;</span><br><span class="line">          size=&quot;0.32rem&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/van-badge&gt;</span><br></pre></td></tr></table></figure><p><strong>2.点击选项删除</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 我的频道列表 --&gt;</span><br><span class="line">&lt;van-row type=&quot;flex&quot;&gt;</span><br><span class="line">&lt;van-col span=&quot;6&quot; v-for=&quot;obj in tabsList&quot; :key=&quot;obj.id&quot; @click=&quot;removeFn(obj)&quot;&gt;</span><br><span class="line">&lt;/van-col&gt;</span><br><span class="line">&lt;/van-row&gt;</span><br></pre></td></tr></table></figure><p><strong>3.从 ChannelEdit.vue 传递要删除的索引到 Home/index.vue 删除频道</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 删除频道</span><br><span class="line">   removeFn (obj) &#123;</span><br><span class="line">       if (this.isEdit === true &amp;&amp; obj.name !== &#x27;推荐&#x27;) &#123;</span><br><span class="line">           this.$emit(&#x27;removeChannel&#x27;, obj)</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>4.Home/index.vue - 监听 removeChannel 事件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 弹出层的主体区域 --&gt;</span><br><span class="line">&lt;channel-edit :userChannelList=&quot;channelList&quot; @close=&quot;show = false&quot; @addChannel=&quot;addChannelFn&quot; @removeChannel=&quot;removeChannelFn&quot;&gt;&lt;/channel-edit&gt;</span><br></pre></td></tr></table></figure><p><strong>5.把更新方法提取, 分别调用</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    // 添加频道</span><br><span class="line">    async addChannelFn (obj) &#123;</span><br><span class="line">      this.channelList.push(obj)</span><br><span class="line">      this.updateChannel()</span><br><span class="line">    &#125;,</span><br><span class="line">    // 统一更新频道</span><br><span class="line">    async updateChannel () &#123;</span><br><span class="line">      // 先拷贝一份数组(前端页面用channelList, 后端用拷贝出的数组)</span><br><span class="line">      // 数组第一层, 对象里key+value是第二层</span><br><span class="line">      const newArr = this.channelList.map(obj =&gt; &#123;</span><br><span class="line">        const newObj = &#123; ...obj &#125;</span><br><span class="line">        return newObj</span><br><span class="line">      &#125;)</span><br><span class="line">      // 先剔除推荐</span><br><span class="line">      const index = newArr.findIndex(obj =&gt; obj.name === &#x27;推荐&#x27;)</span><br><span class="line">      newArr.splice(index, 1)</span><br><span class="line">      // 转换字段</span><br><span class="line">      newArr.forEach((obj, index) =&gt; &#123;</span><br><span class="line">        delete obj.name</span><br><span class="line">        obj.seq = index + 1</span><br><span class="line">      &#125;)</span><br><span class="line">      // 调用接口</span><br><span class="line">      await updateChannelAPI(&#123;</span><br><span class="line">        channels: newArr</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 删除频道</span><br><span class="line">    async removeChannelFn (obj) &#123;</span><br><span class="line">      // 找到这个频道在数组下标删除</span><br><span class="line">      const ind = this.channelList.findIndex(item =&gt; item.id === obj.id)</span><br><span class="line">      this.channelList.splice(ind, 1)</span><br><span class="line">      this.updateChannel()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><div class="tip home"><p>第八、频道管理层关闭，重置编辑状态</p></div><p><strong>1.绑定@closed 事件(查阅 vant)</strong></p><p>channel-edit 添加 ref(为了获取组件对象, 修改内部的 isEdit 变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 弹出层组件 --&gt;</span><br><span class="line">&lt;van-popup v-model=&quot;show&quot; class=&quot;edit_wrap&quot; @closed=&quot;onPopupClosed&quot;&gt;</span><br><span class="line">    &lt;!-- 弹出层的主体区域 --&gt;</span><br><span class="line">    &lt;channel-edit :userChannelList=&quot;channelList&quot; @close=&quot;show = false&quot; @addChannel=&quot;addChannelFn&quot; @removeChannel=&quot;removeChannelFn&quot; ref=&quot;channelEdit&quot;&gt;&lt;/channel-edit&gt;</span><br><span class="line">&lt;/van-popup&gt;</span><br></pre></td></tr></table></figure><p><strong>2.在 Home/index.vue - 访问到 ChannelEdit.vue 的 isEdit 变量设置为 false</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    // 弹层关闭-重置编辑频道状态</span><br><span class="line">    onPopupClosed () &#123;</span><br><span class="line">        this.$refs.channelEdit.isEdit = false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第九、在非编辑状态下，点击我的频道中任意频道，进入相应频道</p></div><p><strong>1.在 ChannelEdit.vue 的我的频道, 点击事件判断</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 删除频道</span><br><span class="line">removeFn (obj) &#123;</span><br><span class="line">    if (this.isEdit === true &amp;&amp; obj.name !== &#x27;推荐&#x27;) &#123; // 删除频道</span><br><span class="line">        this.$emit(&#x27;removeChannel&#x27;, obj)</span><br><span class="line">    &#125; else &#123; // 进入逻辑</span><br><span class="line">        this.$emit(&#x27;changeChannel&#x27;, obj)</span><br><span class="line">        this.$emit(&#x27;close&#x27;) // 关闭弹窗</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.在 Home/index.vue - 绑定@changeChannel 事件, 准备切换显示频道</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;channel-edit</span><br><span class="line">              :userChannelList=&quot;channelList&quot;</span><br><span class="line">              @close=&quot;show = false&quot;</span><br><span class="line">              @addChannel=&quot;addChannelFn&quot;</span><br><span class="line">              @removeChannel=&quot;removeChannelFn&quot;</span><br><span class="line">              ref=&quot;channelEdit&quot;</span><br><span class="line">              @changeChannel=&quot;channgeChannelFn&quot;</span><br><span class="line">              &gt;&lt;/channel-edit&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 切换频道</span><br><span class="line">    channgeChannelFn (obj) &#123;</span><br><span class="line">      this.channelId = obj.id // 传过来的频道ID, 影响tabs默认v-model的选择</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip "><p>未完待续。。。</p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>移动端项目总结（三）</title>
      <link href="/posts/1e88.html"/>
      <url>/posts/1e88.html</url>
      
        <content type="html"><![CDATA[<h1 id="移动端项目总结（三）"><a href="#移动端项目总结（三）" class="headerlink" title="移动端项目总结（三）"></a>移动端项目总结（三）</h1><div class="tip warning faa-horizontal animated faa-fast"><p>写在前面，只要修改了配置文件，一定要重启服务器！！！！</p></div><h2 id="首页功能开发"><a href="#首页功能开发" class="headerlink" title="首页功能开发"></a>首页功能开发</h2><div class="tip home"><p>第一、分析页面结构，创建对应路由，同时将路由重定向至首页</p></div><p>1.Login.vue 和 Layout.vue 是一级路由页面<br>2.Home.vue 和 User.vue 应该是嵌入在 Layout.vue 页面里的二级路由页面<br><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/01/MMGHh.png"/></div></div></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 二级路由的设置方法</span><br><span class="line">&#123;</span><br><span class="line">    path: &#x27;/layout&#x27;,</span><br><span class="line">    component: Layout,</span><br><span class="line">    redirect: &#x27;/layout/home&#x27;, // 默认显示二级页面为home首页</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: &#x27;home&#x27;,</span><br><span class="line">        component: Home</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: &#x27;user&#x27;,</span><br><span class="line">        component: User</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第二、在 layout 页面铺设底部导航，查找 Vant 组件库文档，使用 TabBar 组件，进行全局注册，并设置对应的路由跳转属性</p></div><div class="tip home"><p>第三、美化样式, 给 router-view 外面, 套一个 div.home_container, 并且防止二级页面内容, 被底部导航挡住</p></div><div class="tip home"><p>第四、登录成功，跳转至首页</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 在Login/index.js内, 登陆成功逻辑处末尾</span><br><span class="line">this.$router.replace(&#123;</span><br><span class="line">    path: &#x27;/layout&#x27;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><div class="tip home"><p>第五、进入 Home 组件，开始设置头部标签，查阅 vant 文档为头部左侧添加一个 logo 图片，右侧添加一个 icon 搜索图标</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 头部标签 --&gt;</span><br><span class="line">    &lt;van-nav-bar fixed&gt;</span><br><span class="line">      &lt;template #left&gt;</span><br><span class="line">        &lt;!-- &lt;img class=&quot;logo&quot; src=&quot;../../assets/toutiao_logo.png&quot; alt=&quot;&quot; /&gt; --&gt;</span><br><span class="line">        &lt;img class=&quot;logo&quot; :src=&quot;imgObj&quot;/&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">      &lt;template #right&gt;</span><br><span class="line">        &lt;van-icon name=&quot;search&quot; size=&quot;0.48rem&quot; color=&quot;#fff&quot;/&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/van-nav-bar&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>注意点一：头部标签为何不在 Layout 上面使用 ? 如果使用, 则所有二级页面都有头了, 但实际上只有 Home 页面头部有</p><p>注意点二：由于搜索图标的大小样式是设置在行内，因此 postcss 无法发挥作用，只能通过手动设置 rem 解决</p></div><div class="tip home"><p>第六、查阅 vant 文档，找到 Tab 标签页 ，为首页铺设频道</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 频道部分 --&gt;</span><br><span class="line">// 内容1, 内容2, 内容3, 内容4, 对应的是tab标签下面对应的内容区域(插槽技术)，分别一一对应的关系, 分别独立, 互不影响</span><br><span class="line">&lt;van-tabs v-model=&quot;active&quot; animated&gt;</span><br><span class="line">  &lt;van-tab title=&quot;标签 1&quot;&gt;内容 1&lt;/van-tab&gt;</span><br><span class="line">  &lt;van-tab title=&quot;标签 2&quot;&gt;内容 2&lt;/van-tab&gt;</span><br><span class="line">  &lt;van-tab title=&quot;标签 3&quot;&gt;内容 3&lt;/van-tab&gt;</span><br><span class="line">  &lt;van-tab title=&quot;标签 4&quot;&gt;内容 4&lt;/van-tab&gt;</span><br><span class="line">&lt;/van-tabs&gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>为提升用户体验，将头部设置为固定定位，tab 栏被定位的头部导航挡住, 设置固定定位/粘性定位（查阅 vant 文档进行设置）, 距离上边 46px(手动转 rem)，tab 栏内容部分, 也要给 tab 导航定位留出距离</p></div><div class="tip home"><p>第七、铺设频道动态数据，查阅接口文档，定义接口（需要携带 token），在组件创建时发送请求，循环铺设频道</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import &#123; userChannelAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">            // ...省略其他</span><br><span class="line">        channelList: [] // 频道数据</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">    async created () &#123;</span><br><span class="line">const res = await userChannelAPI()</span><br><span class="line">this.channelList = res.data.data.channels</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------------</span><br><span class="line">&lt;!-- 频道部分 --&gt;</span><br><span class="line">&lt;van-tabs v-model=&quot;active&quot; animated sticky offset-top=&quot;1.226667rem&quot;&gt;</span><br><span class="line">    &lt;van-tab v-for=&quot;item in channelList&quot; :key=&quot;item.id&quot; :title=&quot;item.name&quot;&gt;</span><br><span class="line">        &#123;&#123; item.name &#125;&#125;</span><br><span class="line">    &lt;/van-tab&gt;</span><br><span class="line">&lt;/van-tabs&gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>登录和未登录返回的频道有什么区别? 登录就会传递 token 给后台, 返回对应用户的频道,未登录后台返回默认的频道</p></div><div class="tip home"><p>第八、在 tab 栏内容部分铺设文章列表之前，进行组件拆分，使结构更加清晰，为后续搜索功能开发组件的复用买下基础</p></div><div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.328888.xyz/2022/10/01/Mgm4S.png"/></div></div><div class="tip home"><p>第九、创建对应组件</p></div> 1.创建 ArtileItem 组件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 一条文章单元格 --&gt;</span><br><span class="line">  &lt;van-cell&gt;</span><br><span class="line">    &lt;!-- 标题区域的插槽 --&gt;</span><br><span class="line">    &lt;template #title&gt;</span><br><span class="line">      &lt;div class=&quot;title-box&quot;&gt;</span><br><span class="line">        &lt;!-- 标题 --&gt;</span><br><span class="line">        &lt;span&gt;文章标题&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;!-- label 区域的插槽 --&gt;</span><br><span class="line">    &lt;template #label&gt;</span><br><span class="line">      &lt;div class=&quot;label-box&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;span&gt;作者&lt;/span&gt;</span><br><span class="line">          &lt;span&gt;0评论&lt;/span&gt;</span><br><span class="line">          &lt;span&gt;8个月前&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 反馈按钮 --&gt;</span><br><span class="line">        &lt;van-icon name=&quot;cross&quot; /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/van-cell&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">/* 标题样式 */</span><br><span class="line">.title-box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  align-items: flex-start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* label描述样式 */</span><br><span class="line">.label-box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  align-items: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 文章信息span */</span><br><span class="line">.label-box span&#123;</span><br><span class="line">    margin: 0 3px;</span><br><span class="line">    &amp;:first-child&#123;</span><br><span class="line">        margin-left: 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>2.创建 ArticleList 组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 文章列表 --&gt;</span><br><span class="line">    &lt;article-item&gt;&lt;/article-item&gt;</span><br><span class="line">    &lt;article-item&gt;&lt;/article-item&gt;</span><br><span class="line">    &lt;article-item&gt;&lt;/article-item&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import ArticleItem from &#x27;./components/ArticleItem.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    ArticleItem</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>3.Home 页引入 ArticleList</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 频道部分 --&gt;</span><br><span class="line">&lt;van-tabs v-model=&quot;active&quot;</span><br><span class="line">          animated</span><br><span class="line">          sticky</span><br><span class="line">          offset-top=&quot;1.226667rem&quot;&gt;</span><br><span class="line">    &lt;van-tab v-for=&quot;item in channelList&quot;</span><br><span class="line">             :key=&quot;item.id&quot;</span><br><span class="line">             :title=&quot;item.name&quot;&gt;</span><br><span class="line">        &lt;article-list&gt;&lt;/article-list&gt;</span><br><span class="line">    &lt;/van-tab&gt;</span><br><span class="line">&lt;/van-tabs&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 只有核心代码</span><br><span class="line">import ArticleList from &#x27;@/views/Home/ArticleList&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    components: &#123;</span><br><span class="line">        ArticleList</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>一个细节：<br>每个 van-tab 代表一个标签导航，它中间夹着的内容，对应下属列表的内容<br>van-tab 循环了很多标签导航，与之一一对应的内容列表不是上来都创建的，默认创建当前激活导航对应的列表组件<br>第一次切换的对应的频道时，才会创建下属的 articlelist 组件 -&gt; created()<br>第二次切换就是显示隐藏切换</p></div><div class="tip home"><p>第十、查看接口文档，调用接口，发送请求，铺设数据</p></div><p><strong>1.在 Home/ArticleList.vue 引入, 并发起请求</strong><br><strong>2.在 ArticleList.vue 中, data 定义 articleList 变量接受</strong><br><strong>3.v-for 循环 ArticleItem, 传入文章对象</strong><br><strong>4.ArticleItem 定义 props 变量 obj 接收, 从 ArticleList 传递过来的文章信息对象</strong><br><strong>5.替换标签内容</strong><br><strong>6.需要 v-if 进行图片判断，来确定渲染图片的数量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template #title&gt;</span><br><span class="line">      &lt;div class=&quot;title-box&quot;&gt;</span><br><span class="line">        &lt;!-- 标题 --&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123; obj.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;!-- 单图 --&gt;</span><br><span class="line">        &lt;img class=&quot;thumb&quot;</span><br><span class="line">             :src=&quot;obj.cover.images[0]&quot;</span><br><span class="line">             v-if=&quot;obj.cover.type === 1&quot;/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 三张图片 --&gt;</span><br><span class="line">        &lt;div class=&quot;thumb-box&quot; v-if=&quot;obj.cover.type &gt; 1&quot;&gt;</span><br><span class="line">          &lt;img class=&quot;thumb&quot;</span><br><span class="line">             v-for=&quot;(imgUrl, index) in obj.cover.images&quot;</span><br><span class="line">             :key=&quot;index&quot;</span><br><span class="line">             :src=&quot;imgUrl&quot; /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p><strong>7.需要对时间进行优化，把时间转换成多久之前</strong><br>第一种方法：引入插件库进行处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// dayjs第三方库: https://dayjs.fenxianglu.cn/</span><br><span class="line">yarn add dayjs</span><br><span class="line">---------------------------</span><br><span class="line">// 新建 utils/date.js</span><br><span class="line">import dayjs from &#x27;dayjs&#x27;</span><br><span class="line">import relativeTime from &#x27;dayjs/plugin/relativeTime&#x27; // 到指定时间需要的插件</span><br><span class="line">import &#x27;dayjs/locale/zh&#x27; // 集成中文</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * .....多久之前</span><br><span class="line"> * @param &#123;*&#125; 之前的时间</span><br><span class="line"> * @returns 系统时间到之前指定时间的距离值</span><br><span class="line"> */</span><br><span class="line">export const timeAgo = (targetTime) =&gt; &#123;</span><br><span class="line">  // 格式化时间</span><br><span class="line">  dayjs.extend(relativeTime)</span><br><span class="line">  dayjs.locale(&#x27;zh&#x27;)</span><br><span class="line">  var a = dayjs()</span><br><span class="line">  var b = dayjs(targetTime)</span><br><span class="line">  return a.to(b) // 返回多久之前...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第二种方法：自己单独封装一个转换时间的 js 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">relativeTime (val) &#123;</span><br><span class="line">      const t = new Date(val)</span><br><span class="line">      const diff = Date.now() - t.getTime()</span><br><span class="line"></span><br><span class="line">      const year = Math.floor(diff / (1000 * 3600 * 24 * 365))</span><br><span class="line">      if (year) &#123;</span><br><span class="line">        return `$&#123;year&#125;年前`</span><br><span class="line">      &#125;</span><br><span class="line">      const month = Math.floor(diff / (1000 * 3600 * 24 * 30))</span><br><span class="line">      if (month) &#123;</span><br><span class="line">        return `$&#123;month&#125;月前`</span><br><span class="line">      &#125;</span><br><span class="line">      const day = Math.floor(diff / (1000 * 3600 * 24))</span><br><span class="line">      if (day) &#123;</span><br><span class="line">        return `$&#123;day&#125;天前`</span><br><span class="line">      &#125;</span><br><span class="line">      const hour = Math.floor(diff / (1000 * 3600))</span><br><span class="line">      if (hour) &#123;</span><br><span class="line">        return `$&#123;hour&#125;小时前`</span><br><span class="line">      &#125;</span><br><span class="line">      const minute = Math.floor(diff / (1000 * 60))</span><br><span class="line">      if (minute) &#123;</span><br><span class="line">        return `$&#123;minute&#125;分钟前`</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return &#x27;刚才&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>这里博主更推荐第二种，也就是自己封装一个时间处理函数，一方面锻炼自己原生封装的能力，另一方面可以减小由于引入了外部包而导致最后代码打包时所增加的不必要的体积</p><p>随后将时间处理函数在 home 中使用，直接对数据进行预处理</p></div><div class="tip home"><p>第十一、点击频道显示不同数据(tab 栏切换)</p></div> 1.点击频道, 拿到频道 ID 2.由于频道是用 tab 标签页组件, 需要看文档如何拿到- 在 van-tabs 上修改 v-model 变量名(把 active 换成 channelId)- 在 van-tab 绑定 name 属性和值(值为频道 ID)- 点 van-tab 后,name 值会自动绑定给 v-model(vant 组件内部实现的)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 频道部分 --&gt;</span><br><span class="line">&lt;van-tabs v-model=&quot;channelId&quot; animated sticky offset-top=&quot;1.226667rem&quot;&gt;</span><br><span class="line">&lt;van-tab v-for=&quot;item in channelList&quot; :key=&quot;item.id&quot; :title=&quot;item.name&quot; :name=&quot;item.id&quot;&gt;</span><br><span class="line">&lt;article-list :cid=&quot;channelId&quot;&gt;&lt;/article-list&gt;</span><br><span class="line">&lt;/van-tab&gt;</span><br><span class="line">&lt;/van-tabs&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // ...省略其他(把active换成channelId)</span><br><span class="line">      channelId: 0, // 频道ID(默认0是推荐)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>3.ArticleList 内, props 定义变量 cid, 替换请求的频道（默认会切换 ArticleList, 组件创建后, 会重新进行网络请求）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  // ...核心代码</span><br><span class="line">  props: &#123;</span><br><span class="line">    cid: Number</span><br><span class="line">  &#125;,</span><br><span class="line">  async created () &#123;</span><br><span class="line">    const res = await articlesListAPI(&#123;</span><br><span class="line">      channelId: this.cid</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    // 回来的数据进行预处理, 把时间转成多久多久之前</span><br><span class="line">    res.data.data.results.forEach((obj) =&gt; &#123;</span><br><span class="line">      obj.pubdate = this.timeAgo(obj.pubdate)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    this.articleList = res.data.data.results</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>这里需要解释一下，为什么选择将频道 ID 传入 ArticleList ,而不是直接在 Home 组件内进行数据请求？</p><p>如果我们查阅 Vant 组件文档会发现，点击 tab 标签页可以触发 change 事件，在这里重新发送请求拿到数据，但是这会导致一个致命的问题，每次切换都会得到最新数据，造成不好的用户体验，即使使用组件缓存也没用（keep-alive 是阻止组件销毁，而你只要切换，就会触发事件发送请求拿数据），因为 Home 组件的 data 现在用的是同一个数组切换数据（多个 articleList 用的是同一个数组，会相互影响），所以我们将选择将频道 ID 传入 ArticleList ，文章列表数据，请求，数组，分别放入到各自内部，自己请求自己的，Home 只负责传入当前激活频道的 ID</p></div><div class="tip home"><p>第十二、文章列表——手指往上拉, 底部加载更多</p></div><p>思路：<br><strong>1.寻找 vant 组件, 叫 list 组件(用法查阅文档)</strong><br><strong>2.要判断是否滚动到底部</strong><br><strong>3.给后台传递页码 / 偏移量, 拿到新数据</strong><br><strong>4.和现有数据合并到一个数组里</strong></p><p>1.在 Home/ArticleList 中,使用 list 组件，同时定义组件所需的变量和方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-list</span><br><span class="line">      v-model=&quot;loading&quot;</span><br><span class="line">      :finished=&quot;finished&quot;</span><br><span class="line">      finished-text=&quot;没有更多了&quot;</span><br><span class="line">      @load=&quot;onLoad&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;!-- 文章列表 --&gt;</span><br><span class="line">      &lt;article-item</span><br><span class="line">        v-for=&quot;item in articleList&quot;</span><br><span class="line">        :key=&quot;item.art_id&quot;</span><br><span class="line">        :obj=&quot;item&quot;</span><br><span class="line">      &gt;&lt;/article-item&gt;</span><br><span class="line">&lt;/van-list&gt;</span><br><span class="line">--------------------------------------------</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      articleList: [], // 文章列表</span><br><span class="line">      loading: false, // 底部加载状态</span><br><span class="line">      finished: false // 数据是否全部加载完成</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 底部加载</span><br><span class="line">    onLoad () &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.触底的距离有点远, 查文档, 设置 list 组件属性 offset=”50”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-list</span><br><span class="line">      v-model=&quot;loading&quot;</span><br><span class="line">      :finished=&quot;finished&quot;</span><br><span class="line">      finished-text=&quot;没有更多了&quot;</span><br><span class="line">      @load=&quot;onLoad&quot;</span><br><span class="line">      offset=&quot;50&quot;</span><br><span class="line">    &gt;</span><br></pre></td></tr></table></figure><p>3.网页刚上来不监测是否触底, 不执行 load 事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-list</span><br><span class="line">      v-model=&quot;loading&quot;</span><br><span class="line">      :finished=&quot;finished&quot;</span><br><span class="line">      finished-text=&quot;没有更多了&quot;</span><br><span class="line">      @load=&quot;onLoad&quot;</span><br><span class="line">      offset=&quot;50&quot;</span><br><span class="line">      :immediate-check=&quot;false&quot; (是否在初始化时立即执行滚动位置检查)</span><br><span class="line">    &gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>为什么我们需要 immediate-check=”false” 来使网页刚上来不监测是否触底, 不执行 load 事件？</p><p>因为网页刚打开，created 与 onload 同时执行 同时发送请求 导致 key 值相同</p><p>那么第二个问题就出现了，我们刚打开网页为什么会触发 onload 事件呢？</p><p>主要是因为组件挂载时，就会默认判定一次是否触底，在 vue 中，DOM 的更新是异步的，而第一次的数据也是网络请求回来的，标签先挂载了，数据回来才更新 dom，所以标签没有高度，所以触底</p></div><p>4.查看接口文档，分析如何拿到下一页数据（由于各个接口文档不同，博主以本项目文档举例），发现接口文档有个 timestamp, 说明下一页要用上一次请求成功的 pre_timestamp 的值，所以在 Home/ArticleList.vue, data 里定义变量 nextTime，在文章列表获取成功时, 接收 pre_timestamp 的值，调用接口传入 nextTIme，接收数据合并到现有数组中,最后判断是否全部加载完成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // ...省略其他</span><br><span class="line">      nextTime: null // 用于加载更多(分页)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">    async getArticleList () &#123;</span><br><span class="line">      // 负责拿文章列表数据</span><br><span class="line">      const res = await articlesListAPI(&#123;</span><br><span class="line">        channelId: this.cid,</span><br><span class="line">        timestamp: this.nextTime</span><br><span class="line">      &#125;)</span><br><span class="line">      console.log(res)</span><br><span class="line">      // 回来的数据进行预处理, 把时间转成多久多久之前</span><br><span class="line">      res.data.data.results.forEach((obj) =&gt; &#123;</span><br><span class="line">        obj.pubdate = this.timeAgo(obj.pubdate)</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      // 如果无数据</span><br><span class="line">      if (res.data.data.results.length === 0) &#123;</span><br><span class="line">        this.finished = true // 告诉list组件直接底部显示没有更多数据</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.nextTime = res.data.data.pre_timestamp // 保存下一页数据的时间(做分页用)</span><br><span class="line">        this.articleList = [...this.articleList, ...res.data.data.results]</span><br><span class="line">        // 等待网络请求结果后</span><br><span class="line">        this.loading = false // 底部加载更多状态</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async created () &#123;</span><br><span class="line">    this.getArticleList()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>1.list 组件使用的注意点：</p><ul><li>list 组件触底后, 自动执行 load 事件和对应 onLoad 方法, 并把 loading 值改为 true</li><li>异步数据加载完毕, 合并数据, 把 loading 改为 false, 以后再让 list 自动执行 load 事件</li><li><p>异步数据加载完毕, 判断没有数据了, 把 finished 改为 true, 以后再也不出 load 事件</p><p>2.为何要把新数组和就数组拆开合并起来？ 为了让页面数据更多, 撑高 list 组件, 让用户继续滚动</p></li></ul></div><div class="tip home"><p>第十三、解决 bug：只要稍微滚动，再切换频道，created 与 onload 又会同时执行，就会导致 k 重复</p></div><div class="tip warning"><p>原因：immediate-check:仅仅是内部不要判断而已 ，而 onload 监听事件一直在执行，当上一个页面滚动条位置不为 0 时，切换到新的组件，这时候滚动条会向 0 的位置滚动，而同时异步的数据还没有渲染到 DOM 上，这时候 onload 再一次认为触底加载更多，于是乎触发事件。</p></div><p>解决：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 底部加载</span><br><span class="line">onLoad () &#123;</span><br><span class="line">    // 有第一页数据以后, onLoad再发请求</span><br><span class="line">    if (this.articleList.length &gt; 0) &#123;</span><br><span class="line">        this.getArticleList()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第十四、文章列表——手指往下拉, 顶部刷新</p></div><p>思路：<br><strong>1. 实现页面上下拉效果 - vant组件里的list组件</strong><br><strong>2. 刷新要把旧数组清空, 时间回到系统时间, 重新发起一次请求, 第一页数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">// 用法：包裹在list外层</span><br><span class="line">&lt;van-pull-refresh v-model=&quot;isLoading&quot; @refresh=&quot;onRefresh&quot;&gt;</span><br><span class="line">      &lt;van-list</span><br><span class="line">        v-model=&quot;loading&quot;</span><br><span class="line">        :finished=&quot;finished&quot;</span><br><span class="line">        finished-text=&quot;没有更多了&quot;</span><br><span class="line">        @load=&quot;onLoad&quot;</span><br><span class="line">        offset=&quot;50&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;!-- 文章列表 --&gt;</span><br><span class="line">        &lt;article-item</span><br><span class="line">          v-for=&quot;item in articleList&quot;</span><br><span class="line">          :key=&quot;item.art_id&quot;</span><br><span class="line">          :obj=&quot;item&quot;</span><br><span class="line">        &gt;&lt;/article-item&gt;</span><br><span class="line">      &lt;/van-list&gt;</span><br><span class="line">    &lt;/van-pull-refresh&gt;</span><br><span class="line">---------------------------------------------</span><br><span class="line">export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            // ...省略了其他变量(不要删除啊)</span><br><span class="line">            isLoading: false // 顶部刷新状态</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        // 顶部刷新事件方法</span><br><span class="line">        onRefresh () &#123;</span><br><span class="line">            this.nextTime = null</span><br><span class="line">      this.articleList = []</span><br><span class="line">      this.getArticleList()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br><span class="line">同时一定要注意，在getArticleList()方法中加入这句话，数据异步刷新完毕, 要关闭isLoading状态</span><br><span class="line">this.isLoading = false // 顶部加载状态关闭</span><br></pre></td></tr></table></figure><div class="tip "><p>未完待续。。。</p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>移动端项目总结（二）</title>
      <link href="/posts/12f1.html"/>
      <url>/posts/12f1.html</url>
      
        <content type="html"><![CDATA[<h1 id="移动端项目总结（二）"><a href="#移动端项目总结（二）" class="headerlink" title="移动端项目总结（二）"></a>移动端项目总结（二）</h1><div class="tip warning faa-horizontal animated faa-fast"><p>写在前面，只要修改了配置文件，一定要重启服务器！！！！</p></div><h2 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h2><div class="tip home"><p>第一、搭建登陆页面，添加路由规则，并在 App.vue 中添加路由挂载点</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import Login from &#x27;@/views/Login&#x27;</span><br><span class="line">const routes = [</span><br><span class="line">    &#123;</span><br><span class="line">        path: &#x27;/&#x27;,</span><br><span class="line">        redirect: &#x27;/login&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path: &#x27;/login&#x27;,</span><br><span class="line">        component: Login</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><div class="tip warning"><p>一个注意点：可以先暂时将页面重定向至登录页，等后续首页功能开发后，重定向至首页</p></div><div class="tip home"><p>第二、根据 UI 设计图，在 Vant 组件库中找到对应组件（NavBar 导航，表单组件），铺设登陆页面</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 具体可查阅Vant组件库文档</span><br><span class="line">// 组件引入</span><br><span class="line">// 在main.js - 引入Vant组件 - NavBar导航 - 全局注册</span><br><span class="line">import &#123; NavBar &#125; from &#x27;vant&#x27;</span><br><span class="line">Vue.use(NavBar)</span><br><span class="line">------------------------------</span><br><span class="line">&lt;!-- 组件使用 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;van-nav-bar title=&quot;&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><details class="folding-tag" cyan open><summary> 知识点：修改组件库样式 </summary>              <div class='content'>              <p><span class='p red'>第一种方法</span>：利用开发者工具，找到对应标签的类名，进行样式的覆盖即可<br><span class='p red'>第二种方法</span>：在 Vant 组件库文档中，找到<strong><span class='p cyan'>定制主题</span></strong>选项，按需引入<br>步骤一：<br>在 babel.config.js 中配置按需引入样式源文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    [</span><br><span class="line">      &#x27;import&#x27;,</span><br><span class="line">      &#123;</span><br><span class="line">        libraryName: &#x27;vant&#x27;,</span><br><span class="line">        libraryDirectory: &#x27;es&#x27;,</span><br><span class="line">        // 指定样式路径</span><br><span class="line">        style: (name) =&gt; `$&#123;name&#125;/style/less`,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x27;vant&#x27;,</span><br><span class="line">    ],</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>注意 babel6 不支持按需引入样式，请手动引入样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 引入全部样式</span><br><span class="line">import &#x27;vant/lib/index.less&#x27;;</span><br><span class="line"></span><br><span class="line">// 引入单个组件样式</span><br><span class="line">import &#x27;vant/lib/button/style/less&#x27;;</span><br></pre></td></tr></table></figure><p>步骤二：<br>使用 Less 提供的 modifyVars 即可对变量进行修改，如果 vue-cli 搭建的项目，可以在 vue.config.js 中进行配置<br>在 src 目录下新建的 styles 文件夹下建立一个 xxx.less 文件夹，用于修改想要变更的样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// vue.config.js</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      less: &#123;</span><br><span class="line">        // 若 less-loader 版本小于 6.0，请移除 lessOptions 这一级，直接配置选项。</span><br><span class="line">        lessOptions: &#123;</span><br><span class="line">          modifyVars: &#123;</span><br><span class="line">            // 第一种方式：直接覆盖变量（每次修改都要重启服务器）</span><br><span class="line">            &#x27;text-color&#x27;: &#x27;#111&#x27;,</span><br><span class="line">            &#x27;border-color&#x27;: &#x27;#eee&#x27;,</span><br><span class="line">            // 第二种方式：可以通过 less 文件覆盖（文件路径为绝对路径：不要手动写绝对路径, 用代码来动态获取, 请使用path.join()来进行路径的拼接）（不需要重启服务器）</span><br><span class="line">            hack: `true; @import &quot;$&#123;path.join(__dirname, &#x27;src/styles/cover.less&#x27;)&#125;&quot;;`</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">---------------------------------------</span><br><span class="line">// 在less 文件中设置</span><br><span class="line">@nav-bar-background-color:#007bff;</span><br><span class="line">@nav-bar-title-text-color:white;</span><br></pre></td></tr></table></figure>              </div>            </details><div class="tip warning faa-horizontal animated"><p>注意点一：博主认为，上述第一种方法适用于组件不复用的情况，因为在 style 标签具有 scoped 属性的情况下，只会作用于当前组件，而第二种方法适用于组件复用的情况，无论是直接覆盖变量，或者在 less 文件中覆盖，其修改的组件样式有可能被多处引用，从而导致牵一发而动全身。</p><p>注意点二：上述第一种方法有可能会出现不生效的情况，出现该情况的原因是：该选择器是组件内部的标签，并不是 template 模板中的根标签，在 style 标签具有 scoped 属性的情况下，scoped 尝试为其加入属性选择器来匹配当前页面，而只有在 template 模板中的根标签才能够被 scoped 选中，所以它选不中组件内部的标签。</p><p>解决办法：在选择器前面加上 /deep/ (/deep/ 会把属性选择器加到前面 利用后代选择器往里找)</p><p>/<em> /deep/ 就是把 data-v-hash 值选择器写到类名的前面 </em>/<br>/deep/ .van-nav-bar__title{<br>color: white;<br>}</p><p>注意点三：为什么不直接给组件设置 class 类名，因为组件属性虽然是 class, 但是也要看组件是否支持才可以（需要自己查阅文档）</p></div><div class="tip home"><p>第三、表单组件的正则校验</p></div><p>以下是使用例子，其中组件的属性与方法可以自行查阅文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 整个表单 --&gt;</span><br><span class="line">      &lt;van-form @submit=&quot;onSubmit&quot;&gt;</span><br><span class="line">        &lt;!-- name: 与 input name作用相同，数据传输标志 --&gt;</span><br><span class="line">        &lt;!-- rules 表单校验规则 --&gt;</span><br><span class="line">        &lt;!-- 支持正则校验 --&gt;</span><br><span class="line">        &lt;van-field v-model=&quot;user.mobile&quot;</span><br><span class="line">                   required</span><br><span class="line">                   name=&quot;mobile&quot;</span><br><span class="line">                   label=&quot;手机号&quot;</span><br><span class="line">                   placeholder=&quot;请输入手机号&quot;</span><br><span class="line">                   :rules=&quot;[&#123; required: true, message: &#x27;请输入11位手机号&#x27;, pattern: /^1[3-9]\d&#123;9&#125;$/ &#125;]&quot; /&gt;</span><br><span class="line">        &lt;van-field v-model=&quot;user.code&quot;</span><br><span class="line">                   required</span><br><span class="line">                   type=&quot;password&quot;</span><br><span class="line">                   name=&quot;code&quot;</span><br><span class="line">                   label=&quot;密码&quot;</span><br><span class="line">                   placeholder=&quot;请填写密码&quot;</span><br><span class="line">                   :rules=&quot;[&#123; required: true, message: &#x27;请填写6位密码&#x27;, pattern: /^\d&#123;6&#125;$/ &#125;]&quot; /&gt;</span><br><span class="line">        &lt;div style=&quot;margin: 16px;&quot;&gt;</span><br><span class="line">          &lt;!-- 信息按钮 type=&quot;info&quot; --&gt;</span><br><span class="line">          &lt;!-- native-type 原生 button 标签的 type 属性 --&gt;</span><br><span class="line">          &lt;van-button round</span><br><span class="line">                      block</span><br><span class="line">                      :loading=&quot;isLoading&quot;</span><br><span class="line">                      :disabled=&quot;isLoading&quot;</span><br><span class="line">                      type=&quot;info&quot;</span><br><span class="line">                      native-type=&quot;submit&quot;</span><br><span class="line">                      loading-text=&quot;登录中...&quot;&gt;提交&lt;/van-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/van-form&gt;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>一个注意点：属性后无值的属性，默认值为 true</p></div><div class="tip home"><p>第四、查看接口文档，调用登录接口</p></div><p>在中 api/index.js - 定义登录接口方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 用户 - 登录</span><br><span class="line">export const loginAPI = (&#123; mobile, code &#125;) =&gt; &#123;</span><br><span class="line">  return request(&#123;</span><br><span class="line">    url: &#x27;/v1_0/authorizations&#x27;,</span><br><span class="line">    method: &#x27;POST&#x27;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      mobile,</span><br><span class="line">      code</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在组件中引入调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import &#123; loginAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line"></span><br><span class="line">async onSubmit () &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        const res = await loginAPI(this.formLogin)</span><br><span class="line">        const &#123; token, refresh_token &#125; = res.data.data</span><br><span class="line">        console.log(token);</span><br><span class="line">        console.log(refresh_token);</span><br><span class="line">    &#125; catch (err) &#123;</span><br><span class="line">        console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>一个注意点：axios 内部 自动把参数对象转换成 json 格式发后台，自动将 Content-Type：’application/json’ 配置好</p></div><div class="tip home"><p>第五、登录按钮优化，防止用户在网速慢的时候多次点击登录按钮</p></div><p>1.给按钮设置 loading 状态和 disabled 禁用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-button</span><br><span class="line">            round</span><br><span class="line">            block</span><br><span class="line">            type=&quot;info&quot;</span><br><span class="line">            native-type=&quot;submit&quot;</span><br><span class="line">            :loading=&quot;isLoding&quot;</span><br><span class="line">            :disabled=&quot;isLoding&quot;</span><br><span class="line">            loading-text=&quot;程序员拼命加载ing...&quot;&gt;登录&lt;/van-button&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">data()&#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                // ...省略其他</span><br><span class="line">                isLoding: false // 加载状态</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>2.在网络请求开始的时候 isLoading = true,在网络请求结束的时候 isLoading = false</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">async onSubmit () &#123;</span><br><span class="line">    this.isLoading = true</span><br><span class="line">    try &#123;</span><br><span class="line">        const res = await loginAPI(this.formLogin)</span><br><span class="line">        const &#123; token, refresh_token &#125; = res.data.data</span><br><span class="line">        // 可自行查阅 Vant 组件库 Notify 的用法</span><br><span class="line">        Notify(&#123; type: &#x27;success&#x27;, message: &#x27;登录成功&#x27; &#125;)</span><br><span class="line">        this.isLoading = false</span><br><span class="line">    &#125; catch (err) &#123;</span><br><span class="line">      // 可自行查阅 Vant 组件库 Notify 的用法</span><br><span class="line">        Notify(&#123; type: &#x27;warning&#x27;, message: &#x27;手机号或密码错误&#x27; &#125;)</span><br><span class="line">        this.isLoading = false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip home"><p>第六、登录结果持久化，把 token 和 refresh_token 值保存到浏览器中</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 此文件 封装三个方法 专门用于操作token</span><br><span class="line">// 封装的目的： 代码分层方便清晰，修改方便</span><br><span class="line"></span><br><span class="line">const key = &#x27;xxx&#x27;</span><br><span class="line"></span><br><span class="line">// 设置</span><br><span class="line">export const setToken = token =&gt; localStorage.setItem(key, token)</span><br><span class="line"></span><br><span class="line">// 取出</span><br><span class="line">export const getToken = () =&gt; localStorage.getItem(key)</span><br><span class="line"></span><br><span class="line">// 删除</span><br><span class="line">export const removeToken = () =&gt; localStorage.removeItem(key)</span><br></pre></td></tr></table></figure><div class="tip warning"><p>这里博主将本地存储方法封装为一个 js 文件，并将方法向外导出,哪一个组件需要使用，哪一个组件就可以引用，提高代码复用性的同时，增加了可维护性，如果后续需求改动，即可在该 js 文件中进行替换：如 localStorage 替换为 localSession</p></div><div class="tip "><p>未完待续。。。</p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>移动端项目总结（一）</title>
      <link href="/posts/828b.html"/>
      <url>/posts/828b.html</url>
      
        <content type="html"><![CDATA[<h1 id="移动端项目总结（一）"><a href="#移动端项目总结（一）" class="headerlink" title="移动端项目总结（一）"></a>移动端项目总结（一）</h1><div class="tip warning faa-horizontal animated faa-fast"><p>写在前面，只要修改了配置文件，一定要重启服务器！！！！</p></div><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><ul><li>极客园移动端是一个<span class='p red'>IT资讯移动web应用</span>，有着和<strong>今日头条</strong>类似的资讯浏览体验。</li><li><span class='p red'>主要功能</span>：资讯列表、标签页切换，文章举报，频道管理、文章详情、关注功能、点赞功能、评论功能、搜索功能、登录功能、个人中心、编辑资料、小思同学</li><li>极客园可打包成一款移动 APP，后期结合 H5+可在 Hbuilder 打包成一款体验较好的手机应用。</li><li>项目在线浏览地址: <a href="http://123.57.109.30:4005/dist/">http://123.57.109.30:4005/dist/</a></li></ul><h2 id="项目技术点介绍"><a href="#项目技术点介绍" class="headerlink" title="项目技术点介绍"></a>项目技术点介绍</h2><ul><li>vuejs 中<ul><li>$nextTick 使用 (vue 更新 DOM 是异步的)</li><li>组件通信 (父, 子传递)</li><li>keep-alive 组件缓存</li></ul></li><li>vuex</li><li>vue-router<ul><li>懒加载 (对打包以后首页加载速度有提高)</li></ul></li><li>axios<ul><li>请求和响应拦截器（自动发送 token）</li><li>封装请求工具方法 (代码分层)</li></ul></li><li>vant 移动端组件库</li><li>socket.io-client<ul><li>服务器主动推送数据</li></ul></li><li>amfe-flexible<ul><li>移动端 rem 适配</li></ul></li></ul><h2 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h2><div class="tip home"><p>第一、清空项目默认配置内容</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">├── node_modules # 安装的包</span><br><span class="line">├── public# 静态资源托管目录</span><br><span class="line">│   ├── favicon.ico</span><br><span class="line">│   └── index.html</span><br><span class="line">└── src# 源码</span><br><span class="line">    ├── api#请求接口封装模块</span><br><span class="line">    └── index.js #封装请求方法</span><br><span class="line">    ├── assets#资源目录</span><br><span class="line">    ├── components#组件目录</span><br><span class="line">    ├── router#路由模块</span><br><span class="line">    └── index.js #路由对象</span><br><span class="line">    ├── store#Vuex容器模块</span><br><span class="line">    └── index.js #store对象</span><br><span class="line">    ├── styles #样式目录</span><br><span class="line">    ├── utils  #工具模块目录</span><br><span class="line">    ├── views  #视图组件目录</span><br><span class="line">    ├── App.vue#根组件</span><br><span class="line">    └── main.js#入口文件</span><br><span class="line">├── .browserslistrc # 浏览器的约定</span><br><span class="line">├── .editorconfig #对本项目要用到编辑器的约定</span><br><span class="line">├── .eslintrc.js #eslint</span><br><span class="line">├── .gitignore # git的忽略设置</span><br><span class="line">├── babel.config.js#babel配置文件</span><br><span class="line">├── package-lock.json#npm相关文件</span><br><span class="line">├── package.json#npm相关文件</span><br><span class="line">└── README.md#项目说明文件</span><br></pre></td></tr></table></figure><div class="tip home"><p>第二、增加新的配置文件，将请求均封装至一个模块，统一管理网络请求，不参与逻辑代码，方便后期维护</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- /api/index.js 存储请求函数模块</span><br><span class="line">- /styles 样式文件模块</span><br><span class="line">- /utils 工具函数模块</span><br></pre></td></tr></table></figure><div class="tip home"><p>第三、按需引入 Vant 组件库</p></div><span class='p red'>babel-plugin-import</span> 是一款 babel 插件，它会在编译过程中将 import 的写法自动转换为按需引入的方式。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 安装插件</span><br><span class="line">npm i babel-plugin-import -D</span><br><span class="line"></span><br><span class="line">// 对于使用 babel7 的用户，可以在 babel.config.js 中配置</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    [&#x27;import&#x27;, &#123;</span><br><span class="line">      libraryName: &#x27;vant&#x27;,</span><br><span class="line">      libraryDirectory: &#x27;es&#x27;,</span><br><span class="line">      style: true</span><br><span class="line">    &#125;, &#x27;vant&#x27;]</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 接着你可以在代码中直接引入 Vant 组件</span><br><span class="line">// 插件会自动将代码转化为方式二中的按需引入形式</span><br><span class="line">import &#123; Button &#125; from &#x27;vant&#x27;;</span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated"><p>注意：博主推荐自动按需引入插件，一方面它避免了一次性导入所有组件，增加代码包体积，而另一方面也避免了每次手动引入组件总是还要再引入组件配套的 css 而造成代码冗余。</p></div><div class="tip home"><p>第四、下载 amfe-flexible、postcss 和postcss-pxtorem@5.1.1 进行移动端适配</p></div><p>根目录下创建 postcss.config.js 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">plugins: &#123;</span><br><span class="line">    &#x27;postcss-pxtorem&#x27;: &#123;</span><br><span class="line">      // 能够把所有元素的px单位转成Rem</span><br><span class="line">      // rootValue: 转换px的基准值。</span><br><span class="line">      // 编码时, 一个元素宽是75px，则换成rem之后就是2rem</span><br><span class="line">      rootValue: 37.5,</span><br><span class="line">      propList: [&#x27;*&#x27;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated"><p>一个注意点：postcss 只能转换 style 里面的px  行内的样式它无法进行转换 所以只能自己手动利用rem计算</p></div><div class="tip home"><p>第五、封装 axios 函数，统一配置、便于管理</p></div><p>创建 utils/request.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 基于 axios 封装的请求模块</span><br><span class="line">import theAxios from &#x27;axios&#x27;</span><br><span class="line">// 新建一个新的axios实例</span><br><span class="line">const axios = theAxios.create(&#123;</span><br><span class="line">  baseURL: &#x27;请求的URL基地址&#x27;,</span><br><span class="line">  timeout: 20000 // 20秒超时时间</span><br><span class="line">&#125;)</span><br><span class="line">// 采用对象解构赋值的形式进行参数传递，同时利用函数返回值将 axios 导出</span><br><span class="line">export default (&#123; url, method = &#x27;GET&#x27;, params = &#123;&#125;, data = &#123;&#125;, headers = &#123;&#125; &#125;) =&gt; &#123;</span><br><span class="line">  return axios(&#123;</span><br><span class="line">    url,</span><br><span class="line">    method,</span><br><span class="line">    params,</span><br><span class="line">    data,</span><br><span class="line">    headers</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated"><p>上述代码使用函数+return 导出 axios 的好处是：<br>以后换库, 只需要改这里, 逻辑页面不用动, 保证代码的复用性和独立性(高内聚低耦合)<br>return $.ajax({<br>&nbsp;&nbsp;url: url,<br>&nbsp;&nbsp;type: method,<br>&nbsp;&nbsp;data: data,<br>&nbsp;&nbsp;header: headers<br>})</p></div><div class="tip home"><p>第六、封装接口</p></div><p>api/index.js 定义各种接口方法<br>创建 utils/request.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import request from &#x27;@/utils/request&#x27;</span><br><span class="line">// 接口方法, 只负责调用一个接口, 返回一个Promise对象</span><br><span class="line">export const oneAPI = () =&gt; &#123;</span><br><span class="line">  return request(&#123;</span><br><span class="line">    url: &#x27;url地址&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">export const twoAPI = () =&gt; &#123;</span><br><span class="line">  return request(&#123;</span><br><span class="line">    url: &#x27;url地址&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 组件导入调用</span><br><span class="line">import &#123; oneAPI &#125; from &#x27;@/api&#x27;</span><br><span class="line">async function myFn()&#123;</span><br><span class="line">    const res = await allChannelListAPI()</span><br><span class="line">    console.log(res) // 后台返回的数据</span><br><span class="line">&#125;</span><br><span class="line">// 同时，可使用try+catch来捕获promise失败的结果</span><br><span class="line">myFn();</span><br></pre></td></tr></table></figure><div class="tip "><p>未完待续。。。</p></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于搭建本页面</title>
      <link href="/posts/db1f.html"/>
      <url>/posts/db1f.html</url>
      
        <content type="html"><![CDATA[<h1 id="记录博客的第一次"><a href="#记录博客的第一次" class="headerlink" title="记录博客的第一次"></a>记录博客的第一次</h1><h2 id="小白的懵懂"><a href="#小白的懵懂" class="headerlink" title="小白的懵懂"></a>小白的懵懂</h2><p>对于与一个编程小白来说，这次搭建博客真的是<span class='p red'>太不容易了</span>，以下便是这篇博客出生的艰辛历程。</p><p>首先，我去百度搜索了 <strong>hexo 的官方文档</strong>，来进行安装。在全局安装完以后，下一步就是创建，然而我呆头呆脑的在一个 <wavy>非空的文件夹</wavy> 里进行创建，果不其然报错了，就这个错误我记得还浪费掉许多时间去解决它 QAQ。。<span class='p cyan'>(后来才发现需要一个空文件夹)</span></p><p>在创建完一个 hexo 项目以后，就进行配置，什么主标题啊，副标题啊，关键字啊，都配置好了，又学习了一些常用命令，然后就发现不对劲，就感觉这个默认主题有点丑啊哈哈，<span class='p red'>就打算换一个主题</span>，由于我的疏忽，我并<span class='p red'>没有看到</span> hexo 官方文档中有主题这个选项，但是我也够聪明，直接去中国知名的哔哩哔哩大学去寻找如何为 hexo 更换主体，我翻到了一位<span class='p cyan'>UP 主的个人博客搭建教程，讲道理，视频真的是保姆级别</span> ，奈何我这马马虎虎，活生生把一天的工作量硬是拖到两天。</p><p>由于我本人是自学前端的嘛，所以hexo所依赖的Git与Node.js我平时用的挺多的，所以UP主有关这些<wavy>依赖的配置</wavy>我都是快进，直接跳到了配置主题部分，就是这个操作把我坑惨了。。</p><h2 id="自负的开始"><a href="#自负的开始" class="headerlink" title="自负的开始"></a>自负的开始</h2><p>首先我去 <strong>github</strong> 上将主题代码拉到本地，然后在自己 <strong>hexo 项目</strong>的 <strong>_config.yml</strong> 上将 <strong>theme</strong> 修改为 <strong>butterfly</strong> ，然后运行，然后就报错啦哈哈，因为项目文件夹的名字是 <strong>hexo-theme-butterfly</strong><span class='p red'>(讲道理从这开始已经就不对劲了)</span>,于是乎我又把 <strong>theme</strong> 修改为 <strong>hexo-theme-butterfly</strong>，再跑一变，这次没有报错，本地可以运行，于是我跟着视频就继续配置功能，配置到本地搜索功能的时候，我就发现<span class='p red'>搜索标签根本没有渲染到html上</span>，屏幕里根本就没有这个搜索按钮，但是我以为这可能是服务器还没解析好，于是继续跟着视频配置，直到后来<span class='p red'>连音乐播放器都没有显示</span>，我就感觉不对劲了，然而我以为靠我自己可以解决，但浪费了一下午还是没能解决，十分无奈找到UP主，请它出山帮忙，内时候我还没部署到<strong>github</strong>，然后就立刻建立仓库把这个项目部署上去了，好家伙部署以后更迷糊，连css样式都没了,UP主看完都想刀了我，问我有没有<span class='p red'>好好看视频</span>，后来我又从头到尾仔细看了一边，才发现我快进的地方都是关键的地方QAQ</p><h2 id="好好改造，重新做人"><a href="#好好改造，重新做人" class="headerlink" title="好好改造，重新做人"></a>好好改造，重新做人</h2><div class="tip warning"><p>第一，我从github上拉下来的代码，是测试版的，所以文件名才显示hexo-theme-butterfly，如果直接复制UP主博客里的代码下载以后的主题文件就是butterfly正式版。</p></div><div class="tip warning"><p>第二，在github建立仓库时，我的仓库名是瞎起的，正确的应该是自己的github用户名.github.io。</p></div><div class="tip warning"><p>第三，hexo有严格的格式要求，空格和缩进哪怕多一个少一个都可能报错。</p></div><div class="tip warning"><p>第四，要好好看文档，其实许多答案都在文档里，所有的东西只有自己配置一遍才懂——安知鱼。</p></div><h2 id="由衷的感谢"><a href="#由衷的感谢" class="headerlink" title="由衷的感谢"></a>由衷的感谢</h2><p>最后，十分感谢安知鱼UP主为我博客的建设提出的悉心指导，下面是大佬的博客，欢迎去那里取经<br><div class="tip error"><p><a href="https://anzhiy.cn/">https://anzhiy.cn/</a></p></div></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/3eeb.html"/>
      <url>/posts/3eeb.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><div class="tip "><p>default</p></div>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"接化发`Blog","short_name":"接化发","theme_color":"#425aef","background_color":"#425aef","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {  font-family: ZhuZiAYuanJWD;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);  font-display: swap;  font-weight: lighter;}div#menus {  font-family: 'ZhuZiAYuanJWD';}h1#site-title {  font-family: ZhuZiAYuanJWD;  font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {  font-family: ZhuZiAYuanJWD;}.iconfont {  font-family: 'iconfont' !important;  font-size: 3em;  /* 可以定义图标大小 */  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {  /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */  width: 1em;  height: 1em;  /* width和height定义图标的默认宽度和高度*/  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}.icon-zhongbiao::before {  color: #f7c768;}/* bilibli番剧插件 */#article-container .bangumi-tab.bangumi-active {  background: var(--anzhiyu-theme);  color: var(--anzhiyu-ahoverbg);  border-radius: 10px;}a.bangumi-tab:hover {  text-decoration: none !important;}.bangumi-button:hover {  background: var(--anzhiyu-theme) !important;  border-radius: 10px !important;  color: var(--anzhiyu-ahoverbg) !important;}a.bangumi-button.bangumi-nextpage:hover {  text-decoration: none !important;}.bangumi-button {  padding: 5px 10px !important;}a.bangumi-tab {  padding: 5px 10px !important;}svg.icon.faa-tada {  font-size: 1.1em;}.bangumi-info-item {  border-right: 1px solid #f2b94b;}.bangumi-info-item span{  color: #f2b94b;}.bangumi-info-item em{  color: #f2b94b;}/* 解决artitalk的图标问题 */#uploadSource > svg {  width: 1.19em;  height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {  background-color: transparent !important;}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {  background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {  background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {  background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {  background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {  background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme='dark'] #recent-posts > .recent-post-item {  background: #121212;}[data-theme='dark'] .card-widget {  background: #121212 !important;}[data-theme='dark'] div#post {  background: #121212 !important;}[data-theme='dark'] div#tag {  background: #121212 !important;}[data-theme='dark'] div#archive {  background: #121212 !important;}[data-theme='dark'] div#page {  background: #121212 !important;}[data-theme='dark'] div#category {  background: #121212 !important;}[data-theme='dark'] div#category {  background: transparent !important;}/* 页脚透明 */#footer {  background: transparent !important;}/* 头图透明 */#page-header {  background: transparent !important;}#rightside > div > button {  border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {  width: 10px;  height: 10px;}::-webkit-scrollbar-thumb {  background-color: #425aef;  border-radius: 2em;}::-webkit-scrollbar-corner {  background-color: transparent;}::-moz-selection {  color: #fff;  background-color: #425aef;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {  display: none !important;} */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {  left: -66px !important;  transition: all 0.3s;  /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {  left: 0 !important;  transition: all 0.3s;  /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {  z-index: 999999 !important;}/* 评论框  */.vwrap {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 0px 0px;}/* 鼠标图标 */body {  cursor: url('/img/x1.cur'), auto;}a,[type='button']:not(:disabled),[type='reset']:not(:disabled),[type='submit']:not(:disabled),button:not(:disabled) {  cursor: url('/img/x2.cur'), auto !important;}/* md网站下划线 */#article-container a:hover {  text-decoration: none !important;}#article-container #hpp_talk p img {  display: inline;}/* 404页面 */#error-wrap {  position: absolute;  top: 40%;  right: 0;  left: 0;  margin: 0 auto;  padding: 0 1rem;  max-width: 1000px;  transform: translate(0, -50%);}#error-wrap .error-content {  display: flex;  flex-direction: row;  justify-content: center;  align-items: center;  margin: 0 1rem;  height: 18rem;  border-radius: 8px;  background: var(--card-bg);  box-shadow: var(--card-box-shadow);  transition: all 0.3s;}#error-wrap .error-content .error-img {  box-flex: 1;  flex: 1;  height: 100%;  border-top-left-radius: 8px;  border-bottom-left-radius: 8px;  background-color: #425aef;  background-position: center;  background-size: cover;}#error-wrap .error-content .error-info {  box-flex: 1;  flex: 1;  padding: 0.5rem;  text-align: center;  font-size: 14px;  font-family: Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif;}#error-wrap .error-content .error-info .error_title {  margin-top: -4rem;  font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {  margin-top: -3.5rem;  word-break: break-word;  font-size: 1.6em;}#error-wrap .error-content .error-info a {  display: inline-block;  margin-top: 0.5rem;  padding: 0.3rem 1.5rem;  background: var(--btn-bg);  color: var(--btn-color);}#body-wrap.error .aside-list {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  bottom: 0px;  position: absolute;  padding: 1rem;  width: 100%;  overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  max-width: 1200px;  margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {  padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {  width: 100%;  object-fit: cover;  border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {  overflow: hidden;  width: 230px;  height: 143px;  background: var(--heo-card-bg);  display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {  -webkit-line-clamp: 2;  overflow: hidden;  display: -webkit-box;  -webkit-box-orient: vertical;  line-height: 1.5;  justify-content: center;  align-items: flex-end;  align-content: center;  padding-top: 0.5rem;  color: white;}#body-wrap.error .aside-list .aside-list-item .content time {  display: none;}/* 代码框主题 */#article-container figure.highlight {  border-radius: 10px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!function(c){var l,h,a,t,i,v='<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',o=(o=document.getElementsByTagName("script"))[o.length-1].getAttribute("data-injectcss"),p=function(c,l){l.parentNode.insertBefore(c,l)};if(o&&!c.__iconfont__svg__cssinject__){c.__iconfont__svg__cssinject__=!0;try{document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>")}catch(c){console&&console.log(c)}}function d(){i||(i=!0,a())}function m(){try{t.documentElement.doScroll("left")}catch(c){return void setTimeout(m,50)}d()}l=function(){var c,l=document.createElement("div");l.innerHTML=v,v=null,(l=l.getElementsByTagName("svg")[0])&&(l.setAttribute("aria-hidden","true"),l.style.position="absolute",l.style.width=0,l.style.height=0,l.style.overflow="hidden",l=l,(c=document.body).firstChild?p(l,c.firstChild):c.appendChild(l))},document.addEventListener?~["complete","loaded","interactive"].indexOf(document.readyState)?setTimeout(l,0):(h=function(){document.removeEventListener("DOMContentLoaded",h,!1),l()},document.addEventListener("DOMContentLoaded",h,!1)):document.attachEvent&&(a=l,t=c.document,i=!1,m(),t.onreadystatechange=function(){"complete"==t.readyState&&(t.onreadystatechange=null,d())})}(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){var grt=new Date("09/29/2022 00:00:00");now.setTime(now.getTime()+250);var days=(now-grt)/1e3/60/60/24,dnum=Math.floor(days),hours=(now-grt)/1e3/60/60-24*dnum,hnum=Math.floor(hours);1==String(hnum).length&&(hnum="0"+hnum);var minutes=(now-grt)/1e3/60-1440*dnum-60*hnum,mnum=Math.floor(minutes);1==String(mnum).length&&(mnum="0"+mnum);var seconds=(now-grt)/1e3-86400*dnum-3600*hnum-60*mnum,snum=Math.round(seconds);1==String(snum).length&&(snum="0"+snum);let currentTimeHtml="";currentTimeHtml=hnum<18&&hnum>=9?`<span class='textTip'> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`:`<span class='textTip'> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=currentTimeHtml)}setInterval(()=>{createtime()},250);]]></content>
      
    </entry>
    
    
  
</search>
